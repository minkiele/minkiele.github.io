@use './mixins';
@use './colors';

* {
  &,
  &::before,
  &::after {
    box-sizing: border-box;
  }
}
body {
  background-color: colors.$bg;
  margin: 0;
  font-family: 'Inconsolata', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',
    'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: 'Inconsolata', source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

button {
  color: colors.$fg;
  border: 1px solid colors.$fg;
  background-color: colors.$bg;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  font-weight: 700;
  margin: 0;
  padding: 0.5rem;
  box-shadow: 4px 4px 0px 0px colors.$fg;
  &:active {
    transform: translate(2px, 2px);
    box-shadow: 2px 2px 0px 0px colors.$fg;
  }
  &:focus {
    outline: dotted colors.$fg;
  }
}

input:focus {
  outline: dotted colors.$fg;
}

fieldset {
  border: 1px solid colors.$fg;
  margin: 1rem 0;
  padding: 0.5rem;

  + fieldset {
    margin-top: 0;
  }

  legend {
    border: 1px solid colors.$fg;
    padding: 0.5rem;
    box-shadow: 4px 4px 0px 0px colors.$fg;
  }

  input {
    &:not([type='checkbox']):not([type='radio']) {
      border: 1px solid colors.$fg;
      padding: 0.5rem;
      font-family: inherit;
      border-radius: 0;
    }
    &[type='checkbox'],
    &[type='radio'] {
      @extend .sr-only;
      + label {
        &::before {
          content: ' ';
          display: inline-block;
          width: 1rem;
          height: 1rem;
          border: 1px solid colors.$fg;
          vertical-align: middle;
          margin-right: 0.5rem;
        }
      }
      &:focus + label {
        outline: dotted colors.$fg;
      }
    }

    &:checked + label::before {
      background-color: colors.$fg;
    }

    &[type='radio'] + label::before {
      border-radius: 3rem;
    }
  }

  label {
    line-height: 3;
  }
}

a {
  &,
  &:hover,
  &:focus,
  &:active,
  &:visited {
    color: colors.$fg;
  }
  &:focus {
    outline: dotted colors.$fg;
  }
}

// Global styles applied when browser is dark
@include mixins.when-dark-global() {
  body {
    color: colors.$dark-fg;
    background-color: colors.$dark-bg;
  }
  button {
    color: colors.$dark-fg;
    border: 1px solid colors.$dark-fg;
    background-color: colors.$dark-bg;
    box-shadow: 4px 4px 0px 0px colors.$dark-fg;
    &:active {
      box-shadow: 2px 2px 0px 0px colors.$dark-fg;
    }
    &:focus {
      outline-color: colors.$dark-fg;
    }
  }

  input:focus {
    outline-color: colors.$dark-fg;
  }

  fieldset {
    border: 1px solid colors.$dark-fg;

    legend {
      border: 1px solid colors.$dark-fg;
      box-shadow: 4px 4px 0px 0px colors.$dark-fg;
    }

    input {
      &:not([type='checkbox']):not([type='radio']) {
        color: inherit;
        background-color: inherit;
        border: 1px solid colors.$dark-fg;
      }
      &[type='checkbox'],
      &[type='radio'] {
        + label {
          &::before {
            border: 1px solid colors.$dark-fg;
          }
        }
      }

      &:checked + label::before {
        background-color: colors.$dark-fg;
      }
    }
  }

  a {
    &,
    &:hover,
    &:active,
    &:visited {
      color: inherit;
    }
    &:focus {
      outline-color: colors.$dark-fg;
    }
  }
}

// See https://raw.githubusercontent.com/twbs/bootstrap/v5.2.3/scss/mixins/_visually-hidden.scss
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important; // Fix for https://github.com/twbs/bootstrap/issues/25686
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.sr-only-focusable:not(:focus):not(:focus-within) {
  @extend .sr-only;
}
