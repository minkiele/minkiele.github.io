/*! For license information please see 871.f0d6a179.chunk.js.LICENSE.txt */
(self.webpackChunkminkiele_github_io=self.webpackChunkminkiele_github_io||[]).push([[871],{5871:function(t,e,i){"use strict";i.r(e),i.d(e,{default:function(){return g}});var n=i(4942),r=i(9439),o=i(6123),a=i.n(o),s=i(7363),u=i(5671),c=i(3144),l=function(){function t(){var e=this,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5;(0,u.Z)(this,t),this.size=i,this.row=-1,this.col=-1,this.move=0,this.matrix=Array(this.size).fill(void 0).map((function(){return Array(e.size).fill(void 0)}))}return(0,c.Z)(t,[{key:"isSolved",value:function(){return this.move===Math.pow(this.size,2)}},{key:"getRandomUpTo",value:function(t){return Math.floor(Math.random()*t)}},{key:"setStartPosition",value:function(){do{this.row=this.getRandomUpTo(this.size),this.col=this.getRandomUpTo(this.size)}while(null!=this.getValueAtCurrentPosition())}},{key:"advandceOneMove",value:function(){this.move+=1}},{key:"isPositionCandidate",value:function(t,e){return t>=0&&t<this.size&&e>=0&&e<this.size&&null==this.matrix[t][e]}},{key:"getCandidateCoordinates",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return[this.row+t,this.col+e]}},{key:"advancePosition",value:function(t,e){return this.setCurrentPosition(t,e),this.advandceOneMove(),this.setValueAtCurrentPosition(),this}},{key:"advance",value:function(){for(;this.move<Math.pow(this.size,2);){var t=Array(8).fill(!1),e=!1,i=-1,n=-1;do{var o=this.getRandomUpTo(8);switch(o){case 0:var a=this.getCandidateCoordinates(-3),s=(0,r.Z)(a,2);i=s[0],n=s[1];break;case 1:var u=this.getCandidateCoordinates(-2,2),c=(0,r.Z)(u,2);i=c[0],n=c[1];break;case 2:var l=this.getCandidateCoordinates(0,3),h=(0,r.Z)(l,2);i=h[0],n=h[1];break;case 3:var d=this.getCandidateCoordinates(2,2),v=(0,r.Z)(d,2);i=v[0],n=v[1];break;case 4:var f=this.getCandidateCoordinates(3),m=(0,r.Z)(f,2);i=m[0],n=m[1];break;case 5:var g=this.getCandidateCoordinates(2,-2),y=(0,r.Z)(g,2);i=y[0],n=y[1];break;case 6:var p=this.getCandidateCoordinates(0,-3),C=(0,r.Z)(p,2);i=C[0],n=C[1];break;case 7:var k=this.getCandidateCoordinates(-2,-2),x=(0,r.Z)(k,2);i=x[0],n=x[1]}!t[o]&&this.isPositionCandidate(i,n)&&(this.advancePosition(i,n),e=!0),t[o]=!0}while(!e&&t.includes(!1));if(!t.includes(!1)&&!e)throw new Error("Cannot move anymore")}}},{key:"getValueAtCurrentPosition",value:function(){return this.matrix[this.row][this.col]}},{key:"setCurrentPosition",value:function(t,e){return this.row=t,this.col=e,this}},{key:"setValueAtCurrentPosition",value:function(){return this.matrix[this.row][this.col]=this.move,this}},{key:"playFrom",value:function(t,e){this.advandceOneMove(),this.setCurrentPosition(t,e),this.setValueAtCurrentPosition(),this.advance()}},{key:"play",value:function(){this.advandceOneMove(),this.setStartPosition(),this.setValueAtCurrentPosition(),this.advance()}},{key:"toString",value:function(){return this.matrix.map((function(t){var e=t.map((function(t){return"".concat(null==t||t<10?" ":"").concat(null==t?" ":t)})).join(" ");return"[ ".concat(e," ]")})).join("\n")}},{key:"getMatrix",value:function(){return this.matrix.map((function(t){return t.slice()}))}},{key:"getValueAt",value:function(t,e){return this.matrix[t][e]}},{key:"getMove",value:function(){return this.move}}]),t}(),h=i(1611),d="_3dZBL",v="+yPzP",f=i(6417),m=function(){var t,e=0,i=!1,n=0;do{t=new l,e+=1;try{t.play(),i=!0}catch(r){}n+=t.getMove()}while(!i);return{matrix:t,tries:e,moves:n}},g=function(){var t=(0,s.useState)(m()),e=(0,r.Z)(t,2),i=e[0],o=i.matrix,u=i.moves,c=i.tries,l=e[1],g=(0,s.useState)(!1),y=(0,r.Z)(g,2),p=y[0],C=y[1];(0,s.useEffect)((function(){setTimeout((function(){C(!0)}),250)}),[o]);return(0,f.jsxs)("div",{children:[(0,f.jsx)(h.Z,{children:"# Jump Matrix\n\n## The game\n\nThis is a game I did learn in middle school, you have a 5x5 square, and you must fill the\nsquare with the numbers from 1 to 25. You can start wherever you want but you can move from cell\nto cell following these rules: moving horizontally or vertically you must jump 2 cells,\nmoving diagonally you must jump 1 cell. It seems hard but you average 19 moves before\nending."}),(0,f.jsx)("h3",{children:"Facts"}),(0,f.jsxs)("dl",{children:[(0,f.jsx)("dt",{children:"Total tries:"}),(0,f.jsx)("dd",{children:c}),(0,f.jsx)("dt",{children:"Average moves:"}),(0,f.jsx)("dd",{children:u/c})]}),(0,f.jsx)("table",{children:(0,f.jsx)("tbody",{children:o.getMatrix().map((function(t,e){return(0,f.jsx)("tr",{children:t.map((function(t,e){var i;return(0,f.jsx)("td",{className:a()((i={},(0,n.Z)(i,d,!0),(0,n.Z)(i,v,p),i)),"data-c":t,children:t},"".concat(t,"-").concat(e))}))},"".concat(t.toString(),"-").concat(e))}))})}),(0,f.jsx)("p",{children:(0,f.jsx)("button",{onClick:function(){C(!1),l(m())},children:"More magic please"})})]})}},1611:function(t,e,i){"use strict";i.d(e,{Z:function(){return a}});var n=i(7363),r=i(7973),o=i(6417),a=(0,n.memo)((function(t){var e=t.children;return(0,o.jsx)(r.D,{components:{h1:function(){return(0,n.createElement)(n.Fragment)}},children:e})}))},6123:function(t,e){var i;!function(){"use strict";var n={}.hasOwnProperty;function r(){for(var t=[],e=0;e<arguments.length;e++){var i=arguments[e];if(i){var o=typeof i;if("string"===o||"number"===o)t.push(i);else if(Array.isArray(i)){if(i.length){var a=r.apply(null,i);a&&t.push(a)}}else if("object"===o){if(i.toString!==Object.prototype.toString&&!i.toString.toString().includes("[native code]")){t.push(i.toString());continue}for(var s in i)n.call(i,s)&&i[s]&&t.push(s)}}}return t.join(" ")}t.exports?(r.default=r,t.exports=r):void 0===(i=function(){return r}.apply(e,[]))||(t.exports=i)}()}}]);