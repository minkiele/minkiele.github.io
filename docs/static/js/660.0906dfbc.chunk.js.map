{"version":3,"file":"static/js/660.0906dfbc.chunk.js","mappings":";4OACA,EAAwB,8BCsBxB,GAd6CA,EAAAA,EAAAA,OAAK,YAAsB,IAAnBC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KACpDC,EAAQC,KAAKC,GAAKJ,EAClBK,EAAS,GAAKF,KAAKG,IAAIJ,GACvBK,EAAQ,IAAMJ,KAAKK,IAAIN,GAEvBO,EAAS,kCADA,EAAIP,EAAQD,EACwB,QACnD,OACE,gBACES,UAAWC,EACXC,MAAO,CAAEL,MAAM,GAAD,OAAKA,EAAK,KAAKF,OAAO,GAAD,OAAKA,EAAM,KAAKI,UAAAA,IAGzD,ICpBA,GAAgB,QAAU,0BCoC1B,GAzBiDV,EAAAA,EAAAA,OAAK,kBAAGC,EAAK,EAALA,MAAOa,EAAM,EAANA,OAAQH,EAAS,EAATA,UAAS,OAC/E,gBACEA,UAAWI,KAAU,eAClBH,EAAAA,SAAiB,IAAI,SACrBA,EAAAA,qBAAwC,MAAVE,IAAc,SAC5CH,EAAsBA,GAAS,IAElCE,MACY,MAAVC,OACIE,EACA,CACER,MAAO,EAAIM,EACXR,OAAQ,EAAIQ,GAEnB,UAEAG,EAAAA,EAAAA,MACC,SAACf,GAAI,OACH,SAAC,EAAK,CAAYY,OAAQA,EAAQb,MAAOA,EAAOC,KAAMA,GAA1CA,EAAkD,GAEhED,IAEE,ICjCR,EAAiC,+BCG3BiB,EAAY,SAACC,EAAeC,GAChC,IAAMC,EAAOC,SAASH,GACtB,OAAOI,MAAMF,GAAQD,EAAOhB,KAAKoB,IAAIH,EAAMD,EAC7C,EAqDA,EAnDkC,WAChC,OAAuCK,EAAAA,EAAAA,UAAS,CAC9CxB,MAAO,EACPa,OAAQ,MACR,sBAHOb,EAAK,EAALA,MAAOa,EAAM,EAANA,OAAUY,EAAS,KAuBnC,OACE,4BACE,SAAC,EAAO,CAACzB,MAAOA,EAAOa,OAAQA,EAAQH,UAAWC,KAClD,iCACE,+CACA,kBAAOe,QAAQ,QAAO,8BACtB,kBACEC,KAAK,QACLC,GAAG,QACHC,MAAO7B,EACP8B,SA5BwD,SAACC,GAC/DN,GAAU,SAACO,GAAa,yBACnBA,GAAa,IAChBhC,MAAOiB,EAAUc,EAAIE,OAAOJ,MAAO,IAAE,GAEzC,EAwBQK,KAAK,YAEP,kBAAOR,QAAQ,SAAQ,+CACvB,kBACEC,KAAK,QACLC,GAAG,QACHC,MAAOhB,EACPiB,SA7ByD,SAACC,GAChEN,GAAU,SAACO,GAAa,yBACnBA,GAAa,IAChBnB,OAAQI,EAAUc,EAAIE,OAAOJ,MAAO,IAAE,GAE1C,EAyBQK,KAAK,YAEP,mBAAQC,QAzB8C,WAE5D,EAuBqC,0BAIvC,qBC1DA,OAOC,WACA,aAEA,IAAIC,EAAS,CAAC,EAAEC,eAGhB,SAASvB,IAGR,IAFA,IAAIwB,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQjC,EAAWkC,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,EAEf,OACM,GAAgB,WAAZJ,EAAsB,CAChC,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,WAAaP,EAAIO,SAASA,WAAWG,SAAS,iBAAkB,CACrGd,EAAQM,KAAKF,EAAIO,YACjB,QACD,CAEA,IAAK,IAAII,KAAOX,EACXN,EAAOkB,KAAKZ,EAAKW,IAAQX,EAAIW,IAChCf,EAAQM,KAAKS,EAGhB,CAxBkB,CAyBnB,CAEA,OAAOf,EAAQiB,KAAK,IACrB,CAEqCC,EAAOC,SAC3C3C,EAAW4C,QAAU5C,EACrB0C,EAAOC,QAAU3C,QAKhB,KAFwB,EAAF,WACtB,OAAOA,CACP,UAFoB,OAEpB,YAIF,CApDA","sources":["webpack://minkiele.github.io/./src/apps/Polypo/components/Polygon/components/Slice/Slice.module.scss?d4f7","apps/Polypo/components/Polygon/components/Slice/Slice.tsx","webpack://minkiele.github.io/./src/apps/Polypo/components/Polygon/Polygon.module.scss?b4e8","apps/Polypo/components/Polygon/Polygon.tsx","webpack://minkiele.github.io/./src/apps/Polypo/Polypo.module.scss?5498","apps/Polypo/Polypo.tsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"slice\":\"Slice_slice__TLEDu\"};","import { FunctionComponent, memo } from \"react\";\nimport styles from \"./Slice.module.scss\";\n\nexport interface SliceProps {\n  radius: number;\n  sides: number;\n  side: number;\n}\n\nconst Slice: FunctionComponent<SliceProps> = memo(({ sides, side }) => {\n  const angle = Math.PI / sides;\n  const height = 50 * Math.cos(angle);\n  const width = 100 * Math.sin(angle);\n  const rotate = 2 * angle * side;\n  const transform = `translateX(-50%) rotate(${rotate}rad)`;\n  return (\n    <div\n      className={styles.slice}\n      style={{ width: `${width}%`, height: `${height}%`, transform }}\n    />\n  );\n});\n\nexport default Slice;\n","// extracted by mini-css-extract-plugin\nexport default {\"polygon\":\"Polygon_polygon__IuLIu\"};","import classNames from \"classnames\";\nimport { times } from \"ramda\";\nimport { FunctionComponent, memo } from \"react\";\nimport Slice from \"./components/Slice/Slice\";\nimport styles from \"./Polygon.module.scss\";\n\ninterface PolygonProps {\n  sides: number;\n  radius: number;\n  className?: string;\n}\n\nconst Polygon: FunctionComponent<PolygonProps> = memo(({ sides, radius, className }) => (\n  <div\n    className={classNames({\n      [styles.polygon]: true,\n      [styles.polygon__aspectRatio]: radius == null,\n      [className as string]: className,\n    })}\n    style={\n      radius == null\n        ? undefined\n        : {\n            width: 2 * radius,\n            height: 2 * radius,\n          }\n    }\n  >\n    {times(\n      (side) => (\n        <Slice key={side} radius={radius} sides={sides} side={side} />\n      ),\n      sides\n    )}\n  </div>\n));\n\nexport default Polygon;\n","// extracted by mini-css-extract-plugin\nexport default {\"polypo_polygon\":\"Polypo_polypo_polygon__QQc64\"};","import { ChangeEventHandler, FunctionComponent, MouseEventHandler, useState } from \"react\";\nimport Polygon from \"./components/Polygon/Polygon\";\nimport styles from \"./Polypo.module.scss\";\n\nconst castInput = (input: string, deft: number): number => {\n  const cast = parseInt(input);\n  return isNaN(cast) ? deft : Math.max(cast, deft);\n};\n\nconst Polypo: FunctionComponent = () => {\n  const [{ sides, radius }, setParams] = useState({\n    sides: 4,\n    radius: 128,\n  });\n\n  const handleChangeSides: ChangeEventHandler<HTMLInputElement> = (evt) => {\n    setParams((currentParams) => ({\n      ...currentParams,\n      sides: castInput(evt.target.value, 2),\n    }));\n  };\n\n  const handleChangeRadius: ChangeEventHandler<HTMLInputElement> = (evt) => {\n    setParams((currentParams) => ({\n      ...currentParams,\n      radius: castInput(evt.target.value, 1),\n    }));\n  };\n\n  const handleAnimate: MouseEventHandler<HTMLButtonElement> = () => {\n\n  };\n\n  return (\n    <div>\n      <Polygon sides={sides} radius={radius} className={styles.polypo_polygon} />\n      <fieldset>\n        <legend>Configuration</legend>\n        <label htmlFor=\"sides\">Number of sides</label>\n        <input\n          name=\"sides\"\n          id=\"sides\"\n          value={sides}\n          onChange={handleChangeSides}\n          type=\"number\"\n        />\n        <label htmlFor=\"radius\">Radius of the surrounding circle</label>\n        <input\n          name=\"sides\"\n          id=\"sides\"\n          value={radius}\n          onChange={handleChangeRadius}\n          type=\"number\"\n        />\n        <button onClick={handleAnimate}>Animate</button>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default Polypo;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["memo","sides","side","angle","Math","PI","height","cos","width","sin","transform","className","styles","style","radius","classNames","undefined","times","castInput","input","deft","cast","parseInt","isNaN","max","useState","setParams","htmlFor","name","id","value","onChange","evt","currentParams","target","type","onClick","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default"],"sourceRoot":""}