/*! For license information please see 44.eb5b348f.chunk.js.LICENSE.txt */
(self.webpackChunkminkiele_github_io=self.webpackChunkminkiele_github_io||[]).push([[44],{4044:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return k}});var o=n(4942),r=n(9439),i=n(7313),a="PyQIC",u="IMwkC",s="SDEFW",c="wZvup",l=n(3433),f=n(1413),h=n(3904),m=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:30;return{width:"calc(".concat(n,"% + ").concat((100-n)/Math.max(1,t-1)*(e-1),"%)")}},d=function e(t,n,o){var r=[],i=function(e,t){switch(e){case"left":return"right"===t?"center":"right";case"center":return"right"===t?"left":"right";case"right":return"left"===t?"center":"left"}}(n,o);return t>1&&r.push.apply(r,(0,l.Z)(e(t-1,n,i))),r.push({from:n,to:o}),t>1&&r.push.apply(r,(0,l.Z)(e(t-1,i,o))),r},v=n(1611),p=n(6123),b=n.n(p),g=n(6417),y=["left","center","right"],k=function(){var e=(0,i.useState)(3),t=(0,r.Z)(e,2),n=t[0],p=t[1],k=(0,i.useState)(0),w=(0,r.Z)(k,2),x=w[0],S=w[1],Z=function(e){var t=(0,i.useReducer)((function(e,t){switch(t.type){case"move":var n;return(0,f.Z)((0,f.Z)({},e),{},{board:t.from!==t.to&&e.board[t.from].length>0&&(0===e.board[t.to].length||e.board[t.from][0]<e.board[t.to][0])?(0,f.Z)((0,f.Z)({},e.board),{},(n={},(0,o.Z)(n,t.from,e.board[t.from].slice(1)),(0,o.Z)(n,t.to,[e.board[t.from][0]].concat((0,l.Z)(e.board[t.to]))),n)):e.board});case"setSize":return{size:t.size,board:{left:(0,h.w6H)(1,t.size+1),center:[],right:[]}};case"reset":return(0,f.Z)((0,f.Z)({},e),{},{board:{left:(0,h.w6H)(1,e.size+1),center:[],right:[]}})}}),{size:e,board:{left:(0,h.w6H)(1,e+1),center:[],right:[]}}),n=(0,r.Z)(t,2),a=n[0].board,u=n[1],s=(0,i.useCallback)((function(e){return u({type:"setSize",size:e})}),[]),c=(0,i.useCallback)((function(e,t){return u({type:"move",from:e,to:t})}),[]),m=(0,i.useCallback)((function(){return u({type:"reset"})}),[]);return(0,i.useEffect)((function(){s(e)}),[e,s]),(0,i.useMemo)((function(){return{board:a,setSize:s,move:c,reset:m}}),[a,s,c,m])}(n),j=Z.board,z=Z.move,C=Z.reset,M=function(e){var t=(0,i.useState)([]),n=(0,r.Z)(t,2),o=n[0],a=n[1];(0,i.useEffect)((function(){2===o.length&&(e(o[0],o[1]),a([]))}),[o,e]);var u=(0,i.useCallback)((function(e){a((function(t){return[].concat((0,l.Z)(t),[e])}))}),[]);return(0,i.useMemo)((function(){return{touchSelected:o,touchSelect:u}}),[o,u])}((0,i.useCallback)((function(e,t){z(e,t),S((function(e){return e+1}))}),[z,S])),T=M.touchSelected,D=M.touchSelect,E=(0,i.useRef)(),H=function(e){e.preventDefault()},I=function(){null!=E.current&&clearInterval(E.current)},N=function(){S(0),I()},A=function(){C(),N()},O=(0,h.bBJ)(D);return(0,g.jsxs)("div",{children:[(0,g.jsx)(v.Z,{children:"# Vietnam\n\nA very basic implementation of the **Tower of Hanoi**. To solve it you must\nmove the pile from the left column to one of the others, but you can\nmove a smaller stone over a bigger one (or to an empty column). To move\na pile of n stones the minimum amount of moves is 2^n - 1, so to move\na 10 stones pile you'll take at least 1023 moves to make it properly.\n\nOnce you understand how it works it becomes a very repetitive task, and\nthe challenge becomes remembering where are you during the move, often\nyou'll forget which \"sub-pile\" you're taking down and which one you're\nbuilding up.\n\nThe procedure to solve a Tower of Hanoi can be boiled down to a very\nsimple recursive algorithm, so to move a stack of size n from one column\nto another you must:\n\n1. Move a sub-stack of size n - 1 to the third column;\n2. Move the last stone to the second column;\n3. Move the sub-stack of size n - 1 from the third to the second column;\n\nApply recursively this sequence to any sub stack you're trying to move.\n\nTo play on desktop drag & drop the top stones where you need them; to\nplay on mobile tap the stack you're taking the stone from then tap the\ncolumn where you're leaving it.\n"}),(0,g.jsx)("div",{className:a,children:y.map((function(e){var t,r;return(0,g.jsx)("div",{className:b()((t={},(0,o.Z)(t,u,!0),(0,o.Z)(t,s,T.includes(e)),t)),onDragOver:H,onDrop:(r=e,function(e){e.preventDefault();var t=e.dataTransfer.getData("text/plain");z(t,r),t!==r&&S((function(e){return e+1}))}),onTouchEnd:O(e),children:j[e].map((function(t,o){return(0,g.jsx)("div",{className:c,style:m(t,n,30),draggable:0===o,onDragStart:(r=e,function(e){e.dataTransfer.setData("text/plain",r)})},"".concat(e,"-").concat(t));var r}))},e)}))}),(0,g.jsxs)("p",{children:["To move this tower you'll need 2",(0,g.jsx)("sup",{children:n})," - 1 = ",Math.pow(2,n)-1," ","moves, so far you made ",x," moves."]}),(0,g.jsx)("div",{children:(0,g.jsxs)("fieldset",{children:[(0,g.jsx)("legend",{children:"Controls"}),(0,g.jsx)("label",{htmlFor:"setSize",children:"Size of the tower:"})," ",(0,g.jsx)("input",{id:"setSize",type:"number",onChange:function(e){var t=parseInt(e.target.value);p(Math.max(1,isNaN(t)?1:t)),N()},value:n})," ",(0,g.jsx)("button",{type:"button",onClick:A,children:"Reset"})," ",(0,g.jsx)("button",{type:"button",onClick:function(){A();var e=d(n,"left","right"),t=n>1?1e3/(3*Math.log2(n)):0;E.current=setInterval((function(){if(e.length>0){var t=e.shift(),n=t.from,o=t.to;z(n,o),S((function(e){return e+1}))}else I()}),t)},children:"Solve"})]})})]})}},1611:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var o=n(7313),r=n(7973),i=n(6417),a=(0,o.memo)((function(e){var t=e.children;return(0,i.jsx)(r.D,{components:{h1:function(){return(0,o.createElement)(o.Fragment)}},children:t})}))},6123:function(e,t){var n;!function(){"use strict";var o={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)){if(n.length){var a=r.apply(null,n);a&&e.push(a)}}else if("object"===i){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var u in n)o.call(n,u)&&n[u]&&e.push(u)}}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()}}]);