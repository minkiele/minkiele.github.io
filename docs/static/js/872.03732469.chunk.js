"use strict";(self.webpackChunkminkiele_github_io=self.webpackChunkminkiele_github_io||[]).push([[872],{872:function(e,t,n){n.r(t),n.d(t,{default:function(){return Z}});var r=n(885),i=n(363),o=n(647),u=n(982),a=n(671),s=n(144),l=function(){function e(t){(0,a.Z)(this,e),this.term=t}return(0,s.Z)(e,[{key:"getStringValue",value:function(){return this.term}},{key:"toString",value:function(){return this.getStringValue()}},{key:"asPromise",value:function(){return Promise.resolve(this.getStringValue())}}]),e}(),h=function(e){return"string"===typeof e?new l(e):e},c=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if((0,a.Z)(this,e),this.term=void 0,this._weight=0,this.term=h(t),n<0)throw new Error("Term weight must be >= 0");this._weight=n}return(0,s.Z)(e,[{key:"weight",get:function(){return this._weight}},{key:"getStringValue",value:function(){return this.term.getStringValue()}},{key:"toString",value:function(){return this.getStringValue()}},{key:"asPromise",value:function(){return Promise.resolve(this.getStringValue())}}]),e}(),g=function(){function e(){(0,a.Z)(this,e),this.collection=[],this.weight=0,this.weights=[];for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];if(n.length<=0)throw new Error("Collection must have at least one element");this.collection=n.map((function(e){return e instanceof c?e:new c(e)})).sort((function(e,t){return e.weight-t.weight})),this.weights=this.collection.reduce((function(e,t,n){return[].concat((0,u.Z)(e),[t.weight+(n>0?e[n-1]:0)+1])}),[]),this.weight=this.collection.reduce((function(e,t){return e+t.weight}),0)+this.collection.length}return(0,s.Z)(e,[{key:"getRandomIndex",value:function(){for(var e=Math.floor(Math.random()*this.weight),t=0;t<this.weights.length&&!(e<this.weights[t]);t+=1);return t}},{key:"getStringValue",value:function(){return this.collection[this.getRandomIndex()].getStringValue()}},{key:"toString",value:function(){return this.getStringValue()}},{key:"forExpansion",value:function(){return new c(this,this.weight)}},{key:"asPromise",value:function(){return Promise.resolve(this.getStringValue())}}]),e}(),f=function(){function e(){(0,a.Z)(this,e),this.parts=void 0,this.separator="";for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];this.parts=n.map((function(e){return"string"===typeof e?new l(e):e}))}return(0,s.Z)(e,[{key:"withSeparator",value:function(e){return this.separator=e,this}},{key:"getStringValue",value:function(){return this.parts.map((function(e){return e.getStringValue()})).join(this.separator)}},{key:"toString",value:function(){return this.getStringValue()}},{key:"asPromise",value:function(){return Promise.resolve(this.getStringValue())}}]),e}(),m=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,o.Z)(f,t)},d=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,o.Z)(g,t)},w=function(e,t){return new c(e,t)},v=n(417);function p(e){const t=Object.assign({p:"p",a:"a"},e.components);return(0,v.jsxs)(t.p,{children:["This was inspired by ",(0,v.jsx)(t.a,{href:"http://polygen.org/",children:"Polygen"}),", I wanted to create\na suite of functions that could help you write a Polygen-like generative grammar.\nThe verbs are very limited but they do most of the work you need. The challenge\nfor me here was to pick out an element from a weighted collection. The\npseudo-random generator does not work very well here, too many terms are\nrepeated but it seems ok."]})}var y=function(e={}){const{wrapper:t}=e.components||{};return t?(0,v.jsx)(t,Object.assign({},e,{children:(0,v.jsx)(p,e)})):p(e)},k=m("Barbon",d("e","cino")),S=m("Volp",d("ino","e")),b=d("Carlino","Pastore","Beagle","Mastino",w(k,2),w(S,2),"Shiba","Chihuahua","Lupo","Cirneco","Rottweiler","Dobermann","Pitbull","Labrador","Golden","Schnauzer","Akita","Bull","Levriero","Dalmata","Boxer","Bulldog","Jack","Alano","Basset","Bassotto","Bouledogue"),x=d("Inu","Retriever","Terrier","Russell","Hound","Spaniel"),V=d("Napoletano","Americano","Tedesco","Cecoslovacco","Inglese","Italiano","dell'Etna","Messicano","Australiano","Giapponese","Afghano","Francese"),j=m(b,d("",w(x,2)),d("",w(V,2))).withSeparator(" "),P=function(){for(var e=[],t=0;t<10;t+=1)e.push(j.toString().trim());return e},Z=function(){var e=(0,i.useState)(P()),t=(0,r.Z)(e,2),n=t[0],o=t[1];return(0,v.jsxs)("div",{children:[(0,v.jsx)(y,{}),(0,v.jsxs)("div",{children:[(0,v.jsx)("h3",{children:"Dog breeds"}),(0,v.jsx)("ul",{children:n.map((function(e){return(0,v.jsx)("li",{children:e},e)}))}),(0,v.jsx)("p",{children:(0,v.jsx)("button",{onClick:function(){o(P())},children:"Gimme more dog breeds"})})]})]})}}}]);