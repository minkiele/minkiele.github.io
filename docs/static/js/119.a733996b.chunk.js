"use strict";(self.webpackChunkminkiele_github_io=self.webpackChunkminkiele_github_io||[]).push([[119],{119:function(n,e,r){r.r(e),r.d(e,{default:function(){return g}});var i=r(885),t=r(791),s=Symbol("P"),a=Symbol("D");var u=[];function l(n){var e,r,i=[a];if(n.length){for(var t=n[n.length-1],u=0;u<t.length-1;u+=1)i.push((e=t[u],r=t[u+1],e===r?s:a));i.push(a)}n.push(i)}for(var h=0;h<Math.pow(2,8);h+=1)l(u);var o=" ",c="*";function v(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c;return n.map((function(n){return n===a?r:e})).join("")}function d(){for(var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Math.pow(2,8),e=[],r=0;r<n;r+=1)l(e);return e}function p(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c;return n.map((function(n){return v(n,e,r)})).join("\n")}var f=r(184),g=function(){var n=(0,t.useState)(8),e=(0,i.Z)(n,2),r=e[0],s=e[1];return(0,f.jsxs)("div",{children:[(0,f.jsxs)("p",{children:["This is a graphic representation of the Fibonacci sequence, where the fillings are odd numbers and the void are even numbers. Using 2",(0,f.jsx)("sup",{children:"n"})," steps helps rendering full triangles."]}),(0,f.jsxs)("div",{children:[(0,f.jsxs)("label",{htmlFor:"newTriangles",children:["This will generate 2",(0,f.jsx)("sup",{children:r})," rows"]}),(0,f.jsx)("input",{id:"newTriangles",type:"number",onChange:function(n){var e=parseInt(n.target.value);e>0&&s(e)},value:r})]}),(0,f.jsx)("pre",{children:p(d(Math.pow(2,r)))})]})}}}]);
//# sourceMappingURL=119.a733996b.chunk.js.map