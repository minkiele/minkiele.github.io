{"version":3,"file":"static/js/890.9151eb88.chunk.js","mappings":"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","sources":["apps/Cruciverba/Cruciverba.tsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import \"./Cruciverba.scss\";\nimport { clone, repeat, times } from \"ramda\";\nimport {\n  ChangeEvent,\n  ChangeEventHandler,\n  FormEventHandler,\n  KeyboardEventHandler,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nconst DEFAULT_ROWS = 12;\nconst DEFAULT_COLS = 22;\nconst DEFAULT_SHOW_DEFS = false;\n\ntype ReducerState = {\n  matrix: Array<Array<string | null>>;\n  definitions: Array<Definition>;\n  rows: number;\n  cols: number;\n  showDefs: boolean;\n};\n\ntype ReducerAction =\n  | {\n      type: \"setValue\";\n      row: number;\n      col: number;\n      value: string;\n    }\n  | {\n      type: \"toggleBlack\";\n      row: number;\n      col: number;\n    }\n  | {\n      type: \"setSize\";\n      rows: number;\n      cols: number;\n    }\n  | {\n      type: \"setDefinition\";\n      horizontalDefinition: string;\n      verticalDefinition: string;\n      row: number;\n      col: number;\n    }\n  | {\n      type: \"setShowDefs\";\n      showDefs: boolean;\n    };\n\ninterface Definition {\n  order: number;\n  row: number;\n  col: number;\n  isHorizontal: boolean;\n  isVertical: boolean;\n  horizontalDefinition: string;\n  verticalDefinition: string;\n}\n\nconst shouldBeBlack = (\n  row: number,\n  col: number,\n  matrix: ReducerState[\"matrix\"]\n) => {\n  if (matrix[row][col] == null) {\n    return true;\n  }\n  const isPreviousRowBlack = row === 0 ? true : matrix[row - 1][col] == null;\n  const isPreviousColBlack = col === 0 ? true : matrix[row][col - 1] == null;\n  const isNextRowBlack =\n    row === matrix.length - 1 ? true : matrix[row + 1][col] == null;\n  const isNextColBlack =\n    col === matrix[row].length - 1 ? true : matrix[row][col + 1] == null;\n  return (\n    isPreviousRowBlack && isPreviousColBlack && isNextRowBlack && isNextColBlack\n  );\n};\n\nconst getDefinitions = (\n  matrix: Array<Array<string | null>>\n): Array<Definition> => {\n  const definitions: Array<Definition> = [];\n  for (let i = 0; i < matrix.length; i += 1) {\n    for (let j = 0; j < matrix[i].length; j += 1) {\n      if (matrix[i][j] != null) {\n        const isPreviousRowBlack = i === 0 ? true : matrix[i - 1][j] == null;\n        const isPreviousColBlack = j === 0 ? true : matrix[i][j - 1] == null;\n        const hasOneFreeRowAfter =\n          i < matrix.length - 1 ? matrix[i + 1][j] != null : false;\n        const hasOneFreeColAfter =\n          j < matrix[i].length - 1 ? matrix[i][j + 1] != null : false;\n        const isVertical = isPreviousRowBlack && hasOneFreeRowAfter;\n        const isHorizontal = isPreviousColBlack && hasOneFreeColAfter;\n        if (isHorizontal || isVertical) {\n          definitions.push({\n            order: definitions.length + 1,\n            row: i,\n            col: j,\n            isHorizontal,\n            isVertical,\n            horizontalDefinition: \"\",\n            verticalDefinition: \"\",\n          });\n        }\n      }\n    }\n  }\n  return definitions;\n};\n\nconst initReducer = ({\n  rows,\n  cols,\n  showDefs = true,\n}: {\n  rows: number;\n  cols: number;\n  showDefs?: boolean;\n}) => {\n  const matrix = times(() => repeat(\"\", cols), rows);\n  const definitions = getDefinitions(matrix);\n  return { matrix, definitions, rows, cols, showDefs };\n};\n\nfunction Cruciverba() {\n  const [{ matrix, definitions, rows: ROWS, cols: COLS, showDefs }, dispatch] =\n    useReducer(\n      (state: ReducerState, action: ReducerAction) => {\n        switch (action.type) {\n          case \"setValue\": {\n            const newState: ReducerState[\"matrix\"] = clone(state.matrix);\n            newState[action.row][action.col] = action.value;\n            return { ...state, matrix: newState };\n          }\n          case \"toggleBlack\": {\n            const newState: ReducerState[\"matrix\"] = clone(state.matrix);\n            newState[action.row][action.col] =\n              newState[action.row][action.col] == null ? \"\" : null;\n            return {\n              ...state,\n              matrix: newState,\n              definitions: getDefinitions(newState),\n            };\n          }\n          case \"setSize\": {\n            const newState: ReducerState = initReducer({\n              rows: action.rows,\n              cols: action.cols,\n              showDefs: state.showDefs,\n            });\n            for (let i = 0; i < newState.matrix.length; i += 1) {\n              for (let j = 0; j < newState.matrix[i].length; j += 1) {\n                if (i < state.matrix.length && j < state.matrix[i].length) {\n                  newState.matrix[i][j] = state.matrix[i][j];\n                }\n              }\n            }\n            // Overwrite the definitions\n            newState.definitions = getDefinitions(newState.matrix);\n            return newState;\n          }\n          case \"setDefinition\": {\n            return {\n              ...state,\n              definitions: state.definitions.reduce<Array<Definition>>(\n                (acc, definition) => [\n                  ...acc,\n                  {\n                    ...definition,\n                    ...(definition.row === action.row &&\n                      definition.col === action.col && {\n                        horizontalDefinition: action.horizontalDefinition,\n                        verticalDefinition: action.verticalDefinition,\n                      }),\n                  },\n                ],\n                []\n              ),\n            };\n          }\n          case \"setShowDefs\": {\n            return {\n              ...state,\n              showDefs: action.showDefs,\n            };\n          }\n        }\n      },\n      {\n        rows: DEFAULT_ROWS,\n        cols: DEFAULT_COLS,\n        showDefs: DEFAULT_SHOW_DEFS,\n      },\n      initReducer\n    );\n\n  const rowsRef = useRef<HTMLInputElement | null>(null);\n  const colsRef = useRef<HTMLInputElement | null>(null);\n\n  const inputsRef = useRef<Array<Array<HTMLInputElement | null>>>(\n    times(() => repeat(null, COLS), ROWS)\n  );\n  const setRefCallbackFactory =\n    (row: number, col: number) => (ref: HTMLInputElement) => {\n      if (\n        row < inputsRef.current.length &&\n        col < inputsRef.current[row].length\n      ) {\n        inputsRef.current[row][col] = ref;\n      }\n    };\n\n  const { h: horizontalDefs, v: verticalDefs } = useMemo(\n    () =>\n      definitions.reduce<{ h: Array<Definition>; v: Array<Definition> }>(\n        (acc, definition) => ({\n          ...acc,\n          ...(definition.isHorizontal && { h: [...acc.h, definition] }),\n          ...(definition.isVertical && { v: [...acc.v, definition] }),\n        }),\n        { h: [], v: [] }\n      ),\n    [definitions]\n  );\n\n  const handleChangeFactory =\n    (row: number, col: number) => (evt: ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value.toUpperCase();\n      if (/^[A-Z]?$/.test(value)) {\n        dispatch({\n          type: \"setValue\",\n          row,\n          col,\n          value,\n        });\n      }\n    };\n\n  const handleToggleBlackFactory = (row: number, col: number) => () => {\n    dispatch({\n      type: \"toggleBlack\",\n      row,\n      col,\n    });\n  };\n\n  const handleSetSize: FormEventHandler<HTMLFormElement> = (evt) => {\n    evt.preventDefault();\n    const rows = parseInt(rowsRef.current?.value ?? \"\");\n    const cols = parseInt(colsRef.current?.value ?? \"\");\n\n    // Reset all refs\n    inputsRef.current = times(() => repeat(null, cols), rows);\n\n    dispatch({\n      type: \"setSize\",\n      rows: isNaN(rows) || rows < 2 ? DEFAULT_ROWS : rows,\n      cols: isNaN(cols) || cols < 2 ? DEFAULT_COLS : cols,\n    });\n  };\n\n  const handleDefinitionFactory =\n    (definition: Definition, direction: \"h\" | \"v\") =>\n    (evt: ChangeEvent<HTMLInputElement>) => {\n      dispatch({\n        type: \"setDefinition\",\n        row: definition.row,\n        col: definition.col,\n        horizontalDefinition:\n          direction === \"h\"\n            ? evt.target.value\n            : definition.horizontalDefinition,\n        verticalDefinition:\n          direction === \"v\" ? evt.target.value : definition.verticalDefinition,\n      });\n    };\n\n  const handleToggleDefs: ChangeEventHandler<HTMLInputElement> = (evt) => {\n    dispatch({\n      type: \"setShowDefs\",\n      showDefs: evt.target.checked,\n    });\n  };\n\n  const handleKeyDownNavigateFactory =\n    (row: number, col: number): KeyboardEventHandler<HTMLInputElement> =>\n    (evt) => {\n      if (evt.key === \"ArrowUp\" && row > 0) {\n        inputsRef.current\n          .reduceRight<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index < row && current[col] != null\n                ? current[col]\n                : acc,\n            null\n          )\n          ?.focus();\n      }\n      if (evt.key === \"ArrowDown\" && row < matrix.length - 1) {\n        inputsRef.current\n          .reduce<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index > row && current[col] != null\n                ? current[col]\n                : acc,\n            null\n          )\n          ?.focus();\n      }\n      if (evt.key === \"ArrowLeft\" && col > 0) {\n        inputsRef.current[row]\n          .reduceRight<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index < col && current != null ? current : acc,\n            null\n          )\n          ?.focus();\n      }\n      if (evt.key === \"ArrowRight\" && col < matrix[row].length - 1) {\n        inputsRef.current[row]\n          .reduce<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index > col && current != null ? current : acc,\n            null\n          )\n          ?.focus();\n      }\n      if (\n        evt.key === \"Backspace\" &&\n        (inputsRef.current[row][col]?.value as string).length === 0 &&\n        col > 0\n      ) {\n        inputsRef.current[row]\n          .reduceRight<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index < col && current != null ? current : acc,\n            null\n          )\n          ?.focus();\n      }\n    };\n\n  const handleKeyUpNavigateFactory =\n    (row: number, col: number): KeyboardEventHandler<HTMLInputElement> =>\n    (evt) => {\n      if (/^[a-zA-Z]$/.test(evt.key) && col < matrix[row].length - 1) {\n        inputsRef.current[row]\n          .reduce<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index > col && current != null ? current : acc,\n            null\n          )\n          ?.focus();\n      }\n    };\n\n  // Workaround to avoid a whole tab shifting\n  const renderedApp = (\n    <div className=\"app\">\n      <table className=\"app_table\">\n        <caption className=\"app_caption\">Parole Crociate</caption>\n        <tbody>\n          {times(\n            (row) => (\n              <tr key={row}>\n                {times((col) => {\n                  const definition = definitions.find(\n                    (definition) =>\n                      definition.row === row && definition.col === col\n                  );\n                  return (\n                    <td\n                      className=\"app_td\"\n                      key={`${row}-${col}`}\n                      onDoubleClick={handleToggleBlackFactory(row, col)}\n                    >\n                      {shouldBeBlack(row, col, matrix) ? (\n                        <span className=\"app_black\"></span>\n                      ) : (\n                        <>\n                          {showDefs && definition != null && (\n                            <span className=\"app_definition\">\n                              {definition.order}\n                            </span>\n                          )}\n                          <input\n                            className=\"app_input\"\n                            name={`input-${row}-${col}`}\n                            type=\"text\"\n                            value={matrix[row][col] as string}\n                            onChange={handleChangeFactory(row, col)}\n                            maxLength={1}\n                            ref={setRefCallbackFactory(row, col)}\n                            onKeyDown={handleKeyDownNavigateFactory(row, col)}\n                            onKeyUp={handleKeyUpNavigateFactory(row, col)}\n                            autoComplete=\"off\"\n                          />\n                        </>\n                      )}\n                    </td>\n                  );\n                }, COLS)}\n              </tr>\n            ),\n            ROWS\n          )}\n        </tbody>\n      </table>\n      {showDefs && (\n        <div className=\"app_definitions\">\n          {horizontalDefs.length && (\n            <div className=\"app_directionDefinitions\">\n              <h2>Orizzontali</h2>\n              <ol>\n                {horizontalDefs.map((definition, index) => (\n                  <li\n                    value={definition.order}\n                    key={`h-${definition.order}-${index}`}\n                  >\n                    <input\n                      className=\"app_definitionInput\"\n                      name={`h-${definition.order}`}\n                      type=\"text\"\n                      value={definition.horizontalDefinition}\n                      onChange={handleDefinitionFactory(definition, \"h\")}\n                    />\n                  </li>\n                ))}\n              </ol>\n            </div>\n          )}\n          {verticalDefs.length && (\n            <div className=\"app_directionDefinitions\">\n              <h2>Verticali</h2>\n              <ol>\n                {verticalDefs.map((definition, index) => (\n                  <li\n                    value={definition.order}\n                    key={`v-${definition.order}-${index}`}\n                  >\n                    <input\n                      className=\"app_definitionInput\"\n                      name={`v-${definition.order}`}\n                      type=\"text\"\n                      value={definition.verticalDefinition}\n                      onChange={handleDefinitionFactory(definition, \"v\")}\n                    />\n                  </li>\n                ))}\n              </ol>\n            </div>\n          )}\n        </div>\n      )}\n      <form onSubmit={handleSetSize}>\n        <fieldset>\n          <legend>Opzioni</legend>\n          <label htmlFor=\"rows\">Numero di righe:</label>\n          <input name=\"rows\" defaultValue={ROWS} ref={rowsRef} type=\"number\" />\n          <label htmlFor=\"cols\">Numero di colonne:</label>\n          <input name=\"cols\" defaultValue={COLS} ref={colsRef} type=\"number\" />\n          <input\n            name=\"showDefs\"\n            checked={showDefs}\n            onChange={handleToggleDefs}\n            type=\"checkbox\"\n            value=\"showDefs\"\n          />\n          <label htmlFor=\"defs\">Mostra definizioni</label>\n          <button type=\"submit\">Update</button>\n        </fieldset>\n      </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <p>\n        An implementation of the crosswords schema with automatic calculation of\n        definitions number. Definitely not suitable for mobile devices, it will\n        frustrate you soooo much.\n      </p>\n      {renderedApp}\n    </div>\n  );\n}\n\nexport default Cruciverba;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["shouldBeBlack","row","col","matrix","isPreviousRowBlack","isPreviousColBlack","isNextRowBlack","length","isNextColBlack","getDefinitions","definitions","i","j","hasOneFreeRowAfter","hasOneFreeColAfter","isVertical","isHorizontal","push","order","horizontalDefinition","verticalDefinition","initReducer","rows","cols","showDefs","times","repeat","useReducer","state","action","type","newState","clone","value","reduce","acc","definition","ROWS","COLS","dispatch","rowsRef","useRef","colsRef","inputsRef","setRefCallbackFactory","ref","current","useMemo","h","v","horizontalDefs","verticalDefs","handleChangeFactory","evt","target","toUpperCase","test","handleToggleBlackFactory","handleDefinitionFactory","direction","handleKeyDownNavigateFactory","key","reduceRight","index","focus","handleKeyUpNavigateFactory","renderedApp","className","find","onDoubleClick","name","onChange","maxLength","onKeyDown","onKeyUp","autoComplete","map","onSubmit","preventDefault","parseInt","isNaN","htmlFor","defaultValue","checked","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}