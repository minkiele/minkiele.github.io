{"version":3,"file":"static/js/661.bf84a417.chunk.js","mappings":"wMACe,SAASA,EAA2BC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EACJC,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNC,MAAOd,EAAES,KAEb,EACAM,EAAG,SAAWC,GACZ,MAAMA,CACR,EACAC,EAAGP,EAEP,CACA,MAAM,IAAIQ,UAAU,wIACtB,CACA,IAEEC,EAFEC,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLV,EAAG,WACDT,EAAKA,EAAGoB,KAAKtB,EACf,EACAY,EAAG,WACD,IAAIW,EAAOrB,EAAGsB,OAEd,OADAJ,EAAmBG,EAAKV,KACjBU,CACT,EACAR,EAAG,SAAWU,GACZJ,GAAS,EACTF,EAAMM,CACR,EACAR,EAAG,WACD,IACOG,GAAoC,MAAhBlB,EAAW,QAAWA,EAAW,QAG5D,CAFE,QACA,GAAImB,EAAQ,MAAMF,CACpB,CACF,EAEJ,C,ICnDO,E,UAiCN,gBA/BeO,EAOAC,GAPW,SAAXD,GAAAA,EAAAA,EAAW,SAAXA,EAAAA,EAAW,SAAXA,EAAAA,EAAW,SAAXA,EAAAA,EAAW,UAAXA,IAAAA,EAAW,qBAOF,SAATC,GAAAA,EAAAA,EAAS,SAATA,EAAAA,EAAS,UAATA,IAAAA,EAAS,mBAMpB,yBAFM,SAAgCC,GACnC,OAAQA,EAAc,GAAK,CAC/B,EAgBC,qBANM,SAA4BC,EAAsBC,GACrD,OAAOD,GACH,KAAKF,EAAUI,EAAG,OAAgBD,EAThB,GAAK,EAUvB,KAAKH,EAAUK,EAAG,OAP1B,SAAmBJ,GACf,OAAQA,EAAc,GAAK,CAC/B,CAKiCK,CAAUH,GACnC,QAAS,MAAM,IAAII,MAAM,0BAEjC,CAAC,CAEJ,CAjCgBC,IAAAA,EAAK,K,ICAf,E,oCCAMC,EAAM,6CAELC,OAAiC,GAAG,KACpCC,KAAe,EAAE,KACjBC,QAAkB,CAAE,CA+D7B,OA/D4B,kCAE7B,SAAkBC,EAAYC,EAAaC,GAGvC,OAFAC,KAAKC,iBAAiBH,EAAM,EAAGC,EAAS,GACxCC,KAAKN,OAAOI,GAAKC,GAAUF,EACpBG,IACX,GAAC,wBAED,SAAkBF,EAAaC,GAC3B,GAAID,GAAO,GAAKA,EAAME,KAAKL,MAAQI,GAAU,GAAKA,EAASC,KAAKJ,QAC5D,OAAOI,KAAKN,OAAOI,GAAKC,GAExB,MAAM,IAAIR,MAAM,gCAExB,GAAC,8BAED,SAAyBI,EAAcC,GACnC,IAAK,IAAIM,EAAIF,KAAKJ,QAASM,EAAIN,EAASM,GAAK,EACzCF,KAAKG,UAAUD,GAEnB,IAAK,IAAIpC,EAAYkC,KAAKL,KAAM7B,EAAI6B,EAAM7B,GAAK,EAC3CkC,KAAKI,OAAOtC,EAEpB,GAAC,+BAED,SAA0BgC,GACtB,OAAOO,KAAKC,IAAI,EAAGD,KAAKE,IAAIT,EAAKE,KAAKL,MAC1C,GAAC,kCAED,SAA6BI,GACzB,OAAOM,KAAKC,IAAI,EAAGD,KAAKE,IAAIR,EAAQC,KAAKJ,SAC7C,GAAC,oBAED,SAAcE,GAGV,IAFA,IAAMU,EAAwBR,KAAKS,kBAAkBX,GAC/CY,EAA0B,GACvB5C,EAAI,EAAGA,EAAIkC,KAAKJ,QAAS9B,GAAK,EACnC4C,EAAOC,KAAK,MAIhB,OAFAX,KAAKN,OAAOkB,OAAOJ,EAAe,EAAGE,GACrCV,KAAKL,MAAQ,EACNK,IACX,GAAC,uBAED,SAAiBD,GAEb,IADA,IAAMc,EAA2Bb,KAAKc,qBAAqBf,GAClDjC,EAAI,EAAGA,EAAIkC,KAAKL,KAAM7B,GAAK,EAChCkC,KAAKN,OAAO5B,GAAG8C,OAAOC,EAAkB,EAAG,MAG/C,OADAb,KAAKJ,SAAW,EACTI,IACX,GAAC,qBAED,WACI,OAAOA,KAAKL,IAChB,GAAC,wBAED,WACI,OAAOK,KAAKJ,OAChB,GAAC,qBAED,WACI,OAAOI,KAAKL,KAAOK,KAAKJ,OAC5B,KAAC,EAnEc,GCGNmB,EAAiB,0CAK1B,WAA6B9B,GAAiC,IAAD,EAFhC,OAEgC,gBACzD,gBADyBA,YAAAA,EAA8B,EAHjDa,IAAc,EAAE,EAChBC,OAAiB,EAAC,CAI5B,CAsCC,OAtCA,4BAED,SAAYd,GACR,OAAQA,GACJ,KAAKO,EAAMT,YAAYiC,EACF,IAAbhB,KAAKF,IACLE,KAAKI,OAAO,GAEZJ,KAAKF,KAAO,EAEhB,MACJ,KAAKN,EAAMT,YAAYkC,EACnBjB,KAAKF,KAAO,EACRE,KAAKF,MAAQE,KAAKL,MAClBK,KAAKI,OAAOJ,KAAKF,KAErB,MACJ,KAAKN,EAAMT,YAAYmC,EACC,IAAhBlB,KAAKD,OACLC,KAAKG,UAAU,GAEfH,KAAKD,QAAU,EAEnB,MACJ,KAAKP,EAAMT,YAAYoC,EACnBnB,KAAKD,QAAU,EACXC,KAAKD,SAAWC,KAAKJ,SACrBI,KAAKG,UAAUH,KAAKD,QAExB,MACJ,QACI,MAAM,IAAIR,MAAM,qBAKxB,OAFAS,KAAKf,YAAcA,EAEZe,IAEX,KAAC,EA7CyB,CAAYP,IFuIzC,gBAxIe2B,GAAI,SAAJA,GAAAA,EAAI,UAAJA,EAAI,YAAJA,EAAI,YAAJA,EAAI,YAAJA,EAAI,YAAJA,EAAI,YAAJA,EAAI,YAAJA,EAAI,aAAJA,EAAI,aAAJA,EAAI,aAAJA,EAAI,aAAJA,EAAI,cAAJA,EAAI,WAAJA,EAAI,WAAJA,EAAI,WAAJA,EAAI,YAAJA,IAAAA,EAAI,kBAqBHC,EAAI,WA6Bb,aAIyB,IAHrBL,EAAU,wDACVG,EAAU,wDACVF,EAAU,wDACVC,EAAU,yDAAQ,oBAhCdI,IAAkB,EAAE,KACpBC,IAAkB,EAAE,KACpBC,IAAkB,EAAE,KACpBC,IAAkB,EA8BtBzB,KAAKkB,EAAIA,EACTlB,KAAKgB,EAAIA,EACThB,KAAKiB,EAAIA,EACTjB,KAAKmB,EAAIA,CACb,CAkDC,OAlDA,uBAjCD,WACI,OAAoB,IAAbnB,KAAKyB,GAChB,EAAC,IACD,SAAaC,GACT1B,KAAKyB,IAAMC,EAAS,EAAI,CAC5B,GAAC,aACD,WACI,OAAoB,IAAb1B,KAAKsB,GAChB,EAAC,IACD,SAAaI,GACT1B,KAAKsB,IAAMI,EAAS,EAAI,CAC5B,GAAC,aACD,WACI,OAAoB,IAAb1B,KAAKwB,GAChB,EAAC,IACD,SAAaE,GACT1B,KAAKwB,IAAME,EAAS,EAAI,CAC5B,GAAC,aACD,WACI,OAAoB,IAAb1B,KAAKuB,GAChB,EAAC,IACD,SAAaG,GACT1B,KAAKuB,IAAMG,EAAS,EAAI,CAC5B,GAAC,mBAYD,SAAaC,GACT,OAAO,IAAIN,EACPrB,KAAKgB,GAAKW,EAAKX,EACfhB,KAAKmB,GAAKQ,EAAKR,EACfnB,KAAKiB,GAAKU,EAAKV,EACfjB,KAAKkB,GAAKS,EAAKT,EAEvB,GAAC,yBAED,SAAmBS,GACf,OAAO,IAAIN,EACPrB,KAAKgB,GAAKW,EAAKX,EACfhB,KAAKmB,GAAKQ,EAAKR,EACfnB,KAAKiB,GAAKU,EAAKV,EACfjB,KAAKkB,GAAKS,EAAKT,EAEvB,GAAC,oBAED,WACI,OAAO,IAAIG,GACNrB,KAAKgB,GACLhB,KAAKmB,GACLnB,KAAKiB,GACLjB,KAAKkB,EAEd,GAAC,sBAED,WAEI,OADqBlB,KAAKyB,IAAMzB,KAAKsB,IAAMtB,KAAKwB,IAAMxB,KAAKuB,KAEvD,KAAK,EAAI,OAAOH,EAAKQ,MACrB,KAAK,EAAI,OAAOR,EAAKJ,EACrB,KAAK,EAAI,OAAOI,EAAKD,EACrB,KAAK,EAAI,OAAOC,EAAKS,GACrB,KAAK,EAAI,OAAOT,EAAKH,EACrB,KAAK,EAAI,OAAOG,EAAKU,GACrB,KAAK,EAAI,OAAOV,EAAKW,GACrB,KAAK,EAAI,OAAOX,EAAKY,IACrB,KAAK,EAAI,OAAOZ,EAAKF,EACrB,KAAK,EAAI,OAAOE,EAAKa,GACrB,KAAK,GAAI,OAAOb,EAAKc,GACrB,KAAK,GAAI,OAAOd,EAAKe,IACrB,KAAK,GAAI,OAAOf,EAAKgB,GACrB,KAAK,GAAI,OAAOhB,EAAKiB,IACrB,KAAK,GAAI,OAAOjB,EAAKkB,IACrB,KAAK,GAAI,OAAOlB,EAAKmB,KACrB,QAAS,MAAM,IAAIhD,MAAM,uBAEjC,KAAC,EAxFY,GAwFZ,SAyBJ,UAtBM,SAAiBiD,GACpB,IAAIC,EACJ,OAAQD,GACJ,KAAKpB,EAAKQ,MAAOa,EAAU,EAAG,MAC9B,KAAKrB,EAAKJ,EAAGyB,EAAU,EAAG,MAC1B,KAAKrB,EAAKD,EAAGsB,EAAU,EAAG,MAC1B,KAAKrB,EAAKS,GAAIY,EAAU,EAAG,MAC3B,KAAKrB,EAAKH,EAAGwB,EAAU,EAAG,MAC1B,KAAKrB,EAAKU,GAAIW,EAAU,EAAG,MAC3B,KAAKrB,EAAKW,GAAIU,EAAU,EAAG,MAC3B,KAAKrB,EAAKY,IAAKS,EAAU,EAAG,MAC5B,KAAKrB,EAAKF,EAAGuB,EAAU,EAAG,MAC1B,KAAKrB,EAAKa,GAAIQ,EAAU,EAAG,MAC3B,KAAKrB,EAAKc,GAAIO,EAAU,GAAI,MAC5B,KAAKrB,EAAKe,IAAKM,EAAU,GAAI,MAC7B,KAAKrB,EAAKgB,GAAIK,EAAU,GAAI,MAC5B,KAAKrB,EAAKiB,IAAKI,EAAU,GAAI,MAC7B,KAAKrB,EAAKkB,IAAKG,EAAU,GAAI,MAC7B,KAAKrB,EAAKmB,KAAME,EAAU,GAAI,MAC9B,QAAS,MAAM,IAAIlD,MAAM,qBAE7B,OAAO,IAAI8B,EAAKqB,QAAkB,EAAVD,GAAcC,QAAkB,EAAVD,GAAcC,QAAkB,EAAVD,GAAcC,QAAkB,EAAVD,GAC9F,CAAC,CAEJ,CA1IgBpB,IAAAA,EAAI,KGId,IAAMsB,EAAwB,qGA+BhC,OA/BgC,4BAEjC,SAAYC,GAER,IAQIC,EAREC,EAAuCtD,EAAMuD,uBAAuB/C,KAAKf,aAEzE+D,EAAqB,IAAI3B,EAAKA,KAChCuB,IAAmBpD,EAAMT,YAAYiC,GAAK8B,IAAsBtD,EAAMT,YAAYiC,EAClF4B,IAAmBpD,EAAMT,YAAYoC,GAAK2B,IAAsBtD,EAAMT,YAAYoC,EAClFyB,IAAmBpD,EAAMT,YAAYkC,GAAK6B,IAAsBtD,EAAMT,YAAYkC,EAClF2B,IAAmBpD,EAAMT,YAAYmC,GAAK4B,IAAsBtD,EAAMT,YAAYmC,GAGtF,IAEI2B,EADkC7C,KAAKiD,WAAWjD,KAAKF,IAAKE,KAAKD,QACrCmD,MAAMF,EAGtC,CAFE,MAAOG,GACLN,EAAaG,CACjB,CACA,OAAOhD,KAAKoD,WAAWP,EAAY7C,KAAKF,IAAKE,KAAKD,QAAQsD,KAAKT,EAEnE,GAAC,kBAED,SAAY1D,GACR,IAAMC,EAAwCa,KAAKf,YAC7C2D,EAAoCpD,EAAM8D,mBAAmBpE,EAAWC,GAC9E,OAAOa,KAAKpB,KAAKgE,EACrB,GAAC,sBAED,WACI,OAAO5C,KAAKN,OAAO6D,KAAI,SAAAzD,GAAG,OAAIA,EAAIyD,KAAI,SAAAC,GAAG,OAAY,OAARA,EAAeA,EAAM,GAAG,IAAEC,KAAK,GAAG,IAAEA,KAAK,KAC1F,KAAC,EA/BgC,CAAS1C,GCExC3B,EAAY5B,OAHI,KAIhB6B,EAAY7B,OAHI,KAKtB,SAASkG,EAAiBxE,GACtB,OAAQA,GACJ,KAAKE,EAAG,OAAOC,EACf,KAAKA,EAAG,OAAOD,EACf,QAAS,MAAM,IAAIG,MAAM,qBAEjC,CAIA,SAASoE,EAAKC,EAAwB1E,GAClC,IAAM2E,EAAiCD,EAAWL,IAAIG,GAAkBI,UACxE,OAAQ5E,GACJ,KAAKE,EACL,KAAKC,EACD,MAAM,GAAN,eAAWuE,GAAU,CAAE1E,IAAS,OAAK2E,IACzC,QAAS,MAAM,IAAItE,MAAM,qBAEjC,CAMA,SAASwE,EAAgBC,GACrB,OAAQA,GACJ,KAAK5E,EACD,OAAOI,EAAMR,UAAUI,EAC3B,KAAKC,EACD,OAAOG,EAAMR,UAAUK,EAC3B,QACI,MAAM,IAAIE,MAAM,qBAE5B,CAEO,SAAS0E,IAGZ,IAHyE,IAA5CC,EAAU,uDAAG,GACtCC,EAAqB,GAEhBrG,EAAI,EAAGA,GAAKoG,EAAYpG,GAAK,EAClCqG,EAASR,EAAKQ,EAAQ/E,GAG1B,IACuB,EADjBM,EAAS,IAAIiD,EAAyBnD,EAAMT,YAAYoC,GAAG,IAChDgD,GAAM,IAAvB,2BAAyB,CAAC,IAAjBH,EAAI,QACTtE,EAAO0E,KAAKL,EAAgBC,GAChC,CAAC,+BACD,OAAOtE,CACX,CCxDA,IAAM2E,EAAY7G,OAAO,KACnB8G,EAAY9G,OAAO,KASzB,IAAM+G,EAAqB,GAE3B,SAASnE,EAAOmE,GACZ,IAVYC,EAAYC,EAUlB3E,EAAW,CAACwE,GAClB,GAAIC,EAAS1G,OAAQ,CAEjB,IADA,IAAM6G,EAAeH,EAASA,EAAS1G,OAAS,GACvCqC,EAAI,EAAGA,EAAIwE,EAAQ7G,OAAS,EAAGqC,GAAK,EACzCJ,EAAIa,MAdA6D,EAcYE,EAAQxE,GAdRuE,EAcYC,EAAQxE,EAAI,GAbzCsE,IAAOC,EAAKJ,EAAIC,IAenBxE,EAAIa,KAAK2D,EACb,CACAC,EAAS5D,KAAKb,EAClB,CAEA,IAAK,IAAIhC,EAAI,EAAGA,EAAIuC,KAAKsE,IAAI,EAAG,GAAI7G,GAAK,EACrCsC,EAAOmE,GAGX,IAAMK,EAAgB,IAChBC,EAAgB,IAEtB,SAASC,EAAYhF,GAA+D,IAArDiF,EAAY,uDAAGH,EAAOI,EAAY,uDAAGH,EAChE,OAAO/E,EAAIyD,KAAI,SAAA0B,GAAM,OAAIA,IAAWX,EAAIU,EAAOD,CAAI,IAAEtB,KAAK,GAC9D,CAEO,SAASyB,IAEZ,IAFiD,IAAzBC,EAAK,gEAAG,EAAG,GAC7BZ,EAAqB,GAClBzG,EAAI,EAAGA,EAAIqH,EAAOrH,GAAK,EAC5BsC,EAAOmE,GAEX,OAAOA,CACX,CAEO,SAASa,EAAiBb,GAAyE,IAArDQ,EAAY,uDAAGH,EAAOI,EAAY,uDAAGH,EACtF,OAAON,EAAShB,KAAI,SAAAzD,GAAG,OAAIgF,EAAYhF,EAAKiF,EAAMC,EAAK,IAAEvB,KAAK,KAClE,C,aCSA,EA/C+C,WAC7C,OAAkC4B,EAAAA,EAAAA,UAAiB,GAAE,eAA9CC,EAAS,KAAEC,EAAY,KAC9B,GAA8BF,EAAAA,EAAAA,UAAiB,IAAG,eAA3CG,EAAO,KAAEC,EAAU,KAa1B,OACE,4BACE,uCACA,4BACE,mBAAOC,QAAQ,eAAc,kCACP,yBAAMJ,IAAgB,gBAE5C,kBACEK,GAAG,eACHC,KAAK,SACLC,SAtBsD,SAACC,GAC7D,IAAMC,EAAeC,SAASF,EAAIG,OAAO9H,OACrC4H,EAAe,GACjBR,EAAaQ,EAEjB,EAkBQ5H,MAAOmH,QAGX,yBAAMF,EAAiBF,EAAY,KAAD,IAAC,EAAKI,QACxC,qCACA,4BACE,kBAAOI,QAAQ,aAAY,iFAG3B,kBACEC,GAAG,aACHC,KAAK,SACLC,SA7BoD,SAACC,GAC3D,IAAMI,EAAaF,SAASF,EAAIG,OAAO9H,OACnC+H,EAAa,GACfT,EAAWS,EAEf,EAyBQ/H,MAAOqH,QAGX,yBAAMvB,EAAiBuB,GAASW,eAGtC,C","sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","lib/triangles-dragons/matrix/plane.ts","lib/triangles-dragons/matrix/line.ts","lib/triangles-dragons/matrix/matrix.ts","lib/triangles-dragons/matrix/orientation-matrix.ts","lib/triangles-dragons/matrix/printable-direction-matrix.ts","lib/triangles-dragons/dragons.ts","lib/triangles-dragons/triangles.ts","apps/TrianglesAndDragons/TrianglesAndDragons.tsx"],"sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export namespace Plane {\r\n\r\n    export enum Orientation {\r\n        N = 0,\r\n        E = 1,\r\n        S = 2,\r\n        W = 3\r\n    }\r\n\r\n    export enum Direction {\r\n        L, R\r\n    }\r\n\r\n    export function getOppositeOrientation(orientation: Orientation): Orientation {\r\n        return (orientation + 2) % 4;\r\n    }\r\n\r\n    function turnLeft(orientation: Orientation): Orientation {\r\n        return (orientation + 3) % 4;\r\n    }\r\n\r\n    function turnRight(orientation: Orientation): Orientation {\r\n        return (orientation + 1) % 4;\r\n    }\r\n\r\n    export function getNextOrientation(direction: Direction, currentOrientation: Orientation): Orientation {\r\n        switch(direction) {\r\n            case Direction.L: return turnLeft(currentOrientation);\r\n            case Direction.R: return turnRight(currentOrientation);\r\n            default: throw new Error('Unrecognized direction');\r\n        }\r\n    }\r\n\r\n}\r\n","export namespace Line {\r\n\r\n    export enum Char {\r\n        EMPTY = ' ',\r\n        EW = '\\u2500', // ─\r\n        NS = '\\u2502', // │\r\n        ES = '\\u250c', // ┌\r\n        SW = '\\u2510', // ┐\r\n        NE = '\\u2514', // └\r\n        NW = '\\u2518', // ┘\r\n        NES = '\\u251c', // ├\r\n        NSW = '\\u2524', // ┤\r\n        ESW = '\\u252c', // ┬\r\n        NEW = '\\u2534', // ┴\r\n        NESW = '\\u253c', // ┼\r\n        W = '\\u2574', // ╴\r\n        N = '\\u2575', // ╵\r\n        E = '\\u2576', // ╶\r\n        S = '\\u2577' // ╷\r\n    }\r\n\r\n    type Bitwise<T extends number> = 0 | T;\r\n\r\n    export class Line {\r\n        private $_N: Bitwise<1> = 0;\r\n        private $_E: Bitwise<2> = 0;\r\n        private $_S: Bitwise<4> = 0;\r\n        private $_W: Bitwise<8> = 0;\r\n        public get W(): boolean {\r\n            return this.$_W !== 0;\r\n        }\r\n        public set W(status: boolean) {\r\n            this.$_W = status ? 8 : 0;\r\n        }\r\n        public get N(): boolean {\r\n            return this.$_N !== 0;\r\n        }\r\n        public set N(status: boolean) {\r\n            this.$_N = status ? 1 : 0;\r\n        }\r\n        public get S(): boolean {\r\n            return this.$_S !== 0;\r\n        }\r\n        public set S(status: boolean) {\r\n            this.$_S = status ? 4 : 0;\r\n        }\r\n        public get E(): boolean {\r\n            return this.$_E !== 0;\r\n        }\r\n        public set E(status: boolean) {\r\n            this.$_E = status ? 2 : 0;\r\n        }\r\n        public constructor(\r\n            N: boolean = false,\r\n            E: boolean = false,\r\n            S: boolean = false,\r\n            W: boolean = false) {\r\n            this.W = W;\r\n            this.N = N;\r\n            this.S = S;\r\n            this.E = E;\r\n        }\r\n\r\n        public unite(line: Line): Line {\r\n            return new Line(\r\n                this.N || line.N,\r\n                this.E || line.E,\r\n                this.S || line.S,\r\n                this.W || line.W\r\n            );\r\n        }\r\n\r\n        public intersecate(line: Line): Line {\r\n            return new Line(\r\n                this.N && line.N,\r\n                this.E && line.E,\r\n                this.S && line.S,\r\n                this.W && line.W\r\n            );\r\n        }\r\n\r\n        public negate(): Line {\r\n            return new Line(\r\n                !this.N,\r\n                !this.E,\r\n                !this.S,\r\n                !this.W\r\n            );\r\n        }\r\n\r\n        public toString(): string {\r\n            const bits: number = this.$_W | this.$_N | this.$_S | this.$_E;\r\n            switch (bits) {\r\n                case 0:  return Char.EMPTY;\r\n                case 1:  return Char.N;\r\n                case 2:  return Char.E;\r\n                case 3:  return Char.NE;\r\n                case 4:  return Char.S;\r\n                case 5:  return Char.NS;\r\n                case 6:  return Char.ES;\r\n                case 7:  return Char.NES;\r\n                case 8:  return Char.W;\r\n                case 9:  return Char.NW;\r\n                case 10: return Char.EW;\r\n                case 11: return Char.NEW;\r\n                case 12: return Char.SW;\r\n                case 13: return Char.NSW;\r\n                case 14: return Char.ESW;\r\n                case 15: return Char.NESW;\r\n                default: throw new Error('Unrecognized symbol');\r\n            }\r\n        }\r\n\r\n    }\r\n    export function getLine(char: Char): Line {\r\n        let bitmask: number;\r\n        switch (char) {\r\n            case Char.EMPTY: bitmask = 0; break;\r\n            case Char.N: bitmask = 1; break;\r\n            case Char.E: bitmask = 2; break;\r\n            case Char.NE: bitmask = 3; break;\r\n            case Char.S: bitmask = 4; break;\r\n            case Char.NS: bitmask = 5; break;\r\n            case Char.ES: bitmask = 6; break;\r\n            case Char.NES: bitmask = 7; break;\r\n            case Char.W: bitmask = 8; break;\r\n            case Char.NW: bitmask = 9; break;\r\n            case Char.EW: bitmask = 10; break;\r\n            case Char.NEW: bitmask = 11; break;\r\n            case Char.SW: bitmask = 12; break;\r\n            case Char.NSW: bitmask = 13; break;\r\n            case Char.ESW: bitmask = 14; break;\r\n            case Char.NESW: bitmask = 15; break;\r\n            default: throw new Error('Unrecognized char');\r\n        }\r\n        return new Line(Boolean(bitmask & 1), Boolean(bitmask & 2), Boolean(bitmask & 4), Boolean(bitmask & 8));\r\n    }\r\n\r\n}\r\n","export class Matrix<T> {\r\n\r\n    protected matrix: Array<Array<T | null>> = [];\r\n    protected rows: number = 0;\r\n    protected columns: number = 0;\r\n\r\n    public setContent(content: T, row: number, column: number): this {\r\n        this.ensureMatrixSize(row + 1, column + 1);\r\n        this.matrix[row][column] = content;\r\n        return this;\r\n    }\r\n\r\n    public getContent(row: number, column: number): T {\r\n        if (row >= 0 && row < this.rows && column >= 0 && column < this.columns) {\r\n            return this.matrix[row][column] as T;\r\n        } else {\r\n            throw new Error('ArrayIndexOutOfBoundException');\r\n        }\r\n    }\r\n\r\n    private ensureMatrixSize(rows: number, columns: number) {\r\n        for (let j = this.columns; j < columns; j += 1) {\r\n            this.addColumn(j);\r\n        }\r\n        for (let i: number = this.rows; i < rows; i += 1) {\r\n            this.addRow(i);\r\n        }\r\n    }\r\n\r\n    private normalizeRowIndex(row: number): number {\r\n        return Math.max(0, Math.min(row, this.rows));\r\n    }\r\n\r\n    private normalizeColumnIndex(column: number): number {\r\n        return Math.max(0, Math.min(column, this.columns));\r\n    }\r\n\r\n    public addRow(row: number): this {\r\n        const normalizedRow: number = this.normalizeRowIndex(row);\r\n        const newRow: Array<T | null> = [];\r\n        for (let i = 0; i < this.columns; i += 1) {\r\n            newRow.push(null);\r\n        }\r\n        this.matrix.splice(normalizedRow, 0, newRow);\r\n        this.rows += 1;\r\n        return this;\r\n    }\r\n\r\n    public addColumn(column: number): this {\r\n        const normalizedColumn: number = this.normalizeColumnIndex(column);\r\n        for (let i = 0; i < this.rows; i += 1) {\r\n            this.matrix[i].splice(normalizedColumn, 0, null);\r\n        }\r\n        this.columns += 1;\r\n        return this;\r\n    }\r\n\r\n    public getRows() {\r\n        return this.rows;\r\n    }\r\n\r\n    public getColumns() {\r\n        return this.columns;\r\n    }\r\n\r\n    public getSize() {\r\n        return this.rows * this.columns;\r\n    }\r\n}\r\n","import { Matrix } from './matrix';\r\nimport { Plane } from './plane';\r\n\r\nexport class OrientationMatrix<T> extends Matrix<T> {\r\n\r\n    protected row: number = 0;\r\n    protected column: number = 0;\r\n\r\n    public constructor(protected orientation: Plane.Orientation) {\r\n        super();\r\n    }\r\n\r\n    public move(orientation: Plane.Orientation): this {\r\n        switch (orientation) {\r\n            case Plane.Orientation.N:\r\n                if (this.row === 0) {\r\n                    this.addRow(0);\r\n                } else {\r\n                    this.row -= 1;\r\n                }\r\n                break;\r\n            case Plane.Orientation.S:\r\n                this.row += 1;\r\n                if (this.row === this.rows) {\r\n                    this.addRow(this.row);\r\n                }\r\n                break;\r\n            case Plane.Orientation.W:\r\n                if (this.column === 0) {\r\n                    this.addColumn(0);\r\n                } else {\r\n                    this.column -= 1;\r\n                }\r\n                break;\r\n            case Plane.Orientation.E:\r\n                this.column += 1;\r\n                if (this.column === this.columns) {\r\n                    this.addColumn(this.column);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(`Unknown direction`);\r\n        }\r\n\r\n        this.orientation = orientation;\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n}\r\n","import { OrientationMatrix } from './orientation-matrix';\r\nimport { Line } from './line';\r\nimport { Plane } from './plane';\r\n\r\nexport class PrintableDirectionMatrix extends OrientationMatrix<Line.Line> {\r\n\r\n    public step(newOrientation: Plane.Orientation) {\r\n\r\n        const comingOrientation: Plane.Orientation = Plane.getOppositeOrientation(this.orientation);\r\n\r\n        const newLine: Line.Line = new Line.Line(\r\n            newOrientation === Plane.Orientation.N || comingOrientation === Plane.Orientation.N,\r\n            newOrientation === Plane.Orientation.E || comingOrientation === Plane.Orientation.E,\r\n            newOrientation === Plane.Orientation.S || comingOrientation === Plane.Orientation.S,\r\n            newOrientation === Plane.Orientation.W || comingOrientation === Plane.Orientation.W\r\n        );\r\n        let newContent: Line.Line;\r\n        try {\r\n            const currentContent: Line.Line = this.getContent(this.row, this.column);\r\n            newContent = currentContent.unite(newLine);\r\n        } catch (exc) {\r\n            newContent = newLine;\r\n        }\r\n        return this.setContent(newContent, this.row, this.column).move(newOrientation);\r\n\r\n    }\r\n\r\n    public turn(direction: Plane.Direction): this {\r\n        const currentOrientation: Plane.Orientation = this.orientation;\r\n        const newOrientation: Plane.Orientation = Plane.getNextOrientation(direction, currentOrientation);\r\n        return this.step(newOrientation);\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.matrix.map(row => row.map(col => col !== null ? col : ' ').join('')).join('\\n');\r\n    }\r\n\r\n}\r\n","import { Plane } from './matrix/plane';\r\nimport { PrintableDirectionMatrix } from './matrix/printable-direction-matrix';\r\n\r\nconst L_REP: string = 'L';\r\nconst R_REP: string = 'R';\r\n\r\nconst L: Symbol = Symbol(L_REP);\r\nconst R: Symbol = Symbol(R_REP);\r\n\r\nfunction MirrorDirections(direction: Symbol): Symbol {\r\n    switch (direction) {\r\n        case L: return R;\r\n        case R: return L;\r\n        default: throw new Error('Unknown direction');\r\n    }\r\n}\r\n\r\ntype Directions = Array<Symbol>;\r\n\r\nfunction Bend(directions: Directions, direction: Symbol): Directions {\r\n    const mirroredDirections: Directions = directions.map(MirrorDirections).reverse();\r\n    switch (direction) {\r\n        case L:\r\n        case R:\r\n            return [...directions, direction, ...mirroredDirections];\r\n        default: throw new Error('Unknown direction');\r\n    }\r\n}\r\n\r\nexport function directionsToString(directions: Directions): string {\r\n    return directions.map(direction => direction === L ? L_REP : R_REP).join('');\r\n}\r\n\r\nfunction bendToDirection(bend: Symbol): Plane.Direction {\r\n    switch (bend) {\r\n        case L:\r\n            return Plane.Direction.L;\r\n        case R:\r\n            return Plane.Direction.R;\r\n        default:\r\n            throw new Error('Unknown direction');\r\n    }\r\n}\r\n\r\nexport function getDragonFractal(iterations = 13): PrintableDirectionMatrix {\r\n    let dragon: Directions = [];\r\n\r\n    for (let i = 1; i <= iterations; i += 1) {\r\n        dragon = Bend(dragon, L);\r\n    }\r\n\r\n    const matrix = new PrintableDirectionMatrix(Plane.Orientation.E);\r\n    for (let bend of dragon) {\r\n        matrix.turn(bendToDirection(bend));\r\n    }\r\n    return matrix;\r\n}\r\n","const P: Symbol = Symbol('P');\r\nconst D: Symbol = Symbol('D');\r\n\r\nfunction Oddity(O1: Symbol, O2: Symbol): Symbol {\r\n    return O1 === O2 ? P : D;\r\n}\r\n\r\ntype Row = Array<Symbol>;\r\ntype Triangle = Array<Row>;\r\n\r\nconst triangle: Triangle = [];\r\n\r\nfunction addRow(triangle: Triangle) {\r\n    const row: Row = [D];\r\n    if (triangle.length) {\r\n        const lastRow: Row = triangle[triangle.length - 1];\r\n        for (let j = 0; j < lastRow.length - 1; j += 1) {\r\n            row.push(Oddity(lastRow[j], lastRow[j + 1]));\r\n        }\r\n        row.push(D);\r\n    }\r\n    triangle.push(row);\r\n}\r\n\r\nfor (let i = 0; i < Math.pow(2, 8); i += 1) {\r\n    addRow(triangle);\r\n}\r\n\r\nconst P_REP: string = ' ';\r\nconst D_REP: string = '*';\r\n\r\nfunction rowToString(row: Row, PRep: string = P_REP, DRep: string = D_REP): string {\r\n    return row.map(single => single === D ? DRep : PRep).join('');\r\n}\r\n\r\nexport function getTriangle(limit = 2**8): Triangle {\r\n    const triangle: Triangle = [];\r\n    for (let i = 0; i < limit; i += 1) {\r\n        addRow(triangle);\r\n    }\r\n    return triangle;\r\n}\r\n\r\nexport function triangleToString(triangle: Triangle, PRep: string = P_REP, DRep: string = D_REP): string {\r\n    return triangle.map(row => rowToString(row, PRep, DRep)).join('\\n');\r\n}\r\n\r\n// console.log(triangleToString(triangle));\r\n","import { ChangeEventHandler, FunctionComponent, useState } from \"react\";\nimport { getDragonFractal } from \"../../lib/triangles-dragons/dragons\";\nimport {\n  getTriangle,\n  triangleToString,\n} from \"../../lib/triangles-dragons/triangles\";\n\nconst TrianglesAndDragons: FunctionComponent = () => {\n  const [triangles, setTriangles] = useState<number>(8);\n  const [dragons, setDragons] = useState<number>(13);\n  const handleTriangles: ChangeEventHandler<HTMLInputElement> = (evt) => {\n    const newTriangles = parseInt(evt.target.value);\n    if (newTriangles > 0) {\n      setTriangles(newTriangles);\n    }\n  };\n  const handleDragons: ChangeEventHandler<HTMLInputElement> = (evt) => {\n    const newDragons = parseInt(evt.target.value);\n    if (newDragons > 0) {\n      setDragons(newDragons);\n    }\n  };\n  return (\n    <div>\n      <h2>Triangles</h2>\n      <div>\n        <label htmlFor=\"newTriangles\">\n          This will generate 2<sup>{triangles}</sup> variants\n        </label>\n        <input\n          id=\"newTriangles\"\n          type=\"number\"\n          onChange={handleTriangles}\n          value={triangles}\n        />\n      </div>\n      <pre>{triangleToString(getTriangle(2 ** triangles))}</pre>\n      <h2>Dragons</h2>\n      <div>\n        <label htmlFor=\"newDragons\">\n          This will generate a dragon fractal with the specified iteractions\n        </label>\n        <input\n          id=\"newDragons\"\n          type=\"number\"\n          onChange={handleDragons}\n          value={dragons}\n        />\n      </div>\n      <pre>{getDragonFractal(dragons).toString()}</pre>\n    </div>\n  );\n};\n\nexport default TrianglesAndDragons;\n"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","Orientation","Direction","orientation","direction","currentOrientation","L","R","turnRight","Error","Plane","Matrix","matrix","rows","columns","content","row","column","this","ensureMatrixSize","j","addColumn","addRow","Math","max","min","normalizedRow","normalizeRowIndex","newRow","push","splice","normalizedColumn","normalizeColumnIndex","OrientationMatrix","N","S","W","E","Char","Line","$_N","$_E","$_S","$_W","status","line","EMPTY","NE","NS","ES","NES","NW","EW","NEW","SW","NSW","ESW","NESW","char","bitmask","Boolean","PrintableDirectionMatrix","newOrientation","newContent","comingOrientation","getOppositeOrientation","newLine","getContent","unite","exc","setContent","move","getNextOrientation","map","col","join","MirrorDirections","Bend","directions","mirroredDirections","reverse","bendToDirection","bend","getDragonFractal","iterations","dragon","turn","P","D","triangle","O1","O2","lastRow","pow","P_REP","D_REP","rowToString","PRep","DRep","single","getTriangle","limit","triangleToString","useState","triangles","setTriangles","dragons","setDragons","htmlFor","id","type","onChange","evt","newTriangles","parseInt","target","newDragons","toString"],"sourceRoot":""}