{"version":3,"sources":["../node_modules/ramda/es/internal/_curry1.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/ramda/es/internal/_isPlaceholder.js","../node_modules/ramda/es/internal/_curry2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/ramda/es/times.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/ramda/es/always.js","../node_modules/ramda/es/repeat.js","../node_modules/ramda/es/type.js","../node_modules/ramda/es/internal/_clone.js","../node_modules/ramda/es/internal/_cloneRegExp.js","../node_modules/ramda/es/clone.js","apps/Cruciverba/Cruciverba.tsx"],"names":["_curry1","fn","f1","a","arguments","length","_isPlaceholder","apply","this","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_curry2","f2","b","_b","_a","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","i","source","forEach","getOwnPropertyDescriptors","defineProperties","times","n","list","len","Number","idx","isNaN","RangeError","Array","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","always","val","repeat","type","undefined","prototype","toString","call","slice","_clone","refFrom","refTo","deep","pattern","copy","copiedValue","Date","valueOf","RegExp","global","ignoreCase","multiline","sticky","unicode","clone","shouldBeBlack","row","col","matrix","isPreviousRowBlack","isPreviousColBlack","isNextRowBlack","isNextColBlack","getDefinitions","definitions","j","hasOneFreeRowAfter","hasOneFreeColAfter","isVertical","isHorizontal","order","horizontalDefinition","verticalDefinition","initReducer","rows","cols","showDefs","Cruciverba","useReducer","state","action","newState","reduce","acc","definition","ROWS","COLS","dispatch","rowsRef","useRef","colsRef","inputsRef","setRefCallbackFactory","ref","current","useMemo","h","v","horizontalDefs","verticalDefs","handleChangeFactory","evt","toUpperCase","test","handleToggleBlackFactory","handleDefinitionFactory","direction","handleKeyDownNavigateFactory","reduceRight","index","focus","handleKeyUpNavigateFactory","className","find","onDoubleClick","name","onChange","maxLength","onKeyDown","onKeyUp","map","onSubmit","preventDefault","parseInt","htmlFor","defaultValue","checked"],"mappings":"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","file":"static/js/3.7aec825b.chunk.js","sourcesContent":["import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","import _curry2 from \"./internal/_curry2.js\";\nimport always from \"./always.js\";\nimport times from \"./times.js\";\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _clone from \"./internal/_clone.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\n\nexport default clone;","import \"./Cruciverba.scss\";\nimport { clone, repeat, times } from \"ramda\";\nimport {\n  ChangeEvent,\n  ChangeEventHandler,\n  FormEventHandler,\n  KeyboardEventHandler,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nconst DEFAULT_ROWS = 12;\nconst DEFAULT_COLS = 22;\nconst DEFAULT_SHOW_DEFS = true;\n\ntype ReducerState = {\n  matrix: Array<Array<string | null>>;\n  definitions: Array<Definition>;\n  rows: number;\n  cols: number;\n  showDefs: boolean;\n};\n\ntype ReducerAction =\n  | {\n      type: \"setValue\";\n      row: number;\n      col: number;\n      value: string;\n    }\n  | {\n      type: \"toggleBlack\";\n      row: number;\n      col: number;\n    }\n  | {\n      type: \"setSize\";\n      rows: number;\n      cols: number;\n    }\n  | {\n      type: \"setDefinition\";\n      horizontalDefinition: string;\n      verticalDefinition: string;\n      row: number;\n      col: number;\n    }\n  | {\n      type: \"setShowDefs\";\n      showDefs: boolean;\n    };\n\ninterface Definition {\n  order: number;\n  row: number;\n  col: number;\n  isHorizontal: boolean;\n  isVertical: boolean;\n  horizontalDefinition: string;\n  verticalDefinition: string;\n}\n\nconst shouldBeBlack = (\n  row: number,\n  col: number,\n  matrix: ReducerState[\"matrix\"]\n) => {\n  if (matrix[row][col] == null) {\n    return true;\n  }\n  const isPreviousRowBlack = row === 0 ? true : matrix[row - 1][col] == null;\n  const isPreviousColBlack = col === 0 ? true : matrix[row][col - 1] == null;\n  const isNextRowBlack =\n    row === matrix.length - 1 ? true : matrix[row + 1][col] == null;\n  const isNextColBlack =\n    col === matrix[row].length - 1 ? true : matrix[row][col + 1] == null;\n  return (\n    isPreviousRowBlack && isPreviousColBlack && isNextRowBlack && isNextColBlack\n  );\n};\n\nconst getDefinitions = (\n  matrix: Array<Array<string | null>>\n): Array<Definition> => {\n  const definitions: Array<Definition> = [];\n  for (let i = 0; i < matrix.length; i += 1) {\n    for (let j = 0; j < matrix[i].length; j += 1) {\n      if (matrix[i][j] != null) {\n        const isPreviousRowBlack = i === 0 ? true : matrix[i - 1][j] == null;\n        const isPreviousColBlack = j === 0 ? true : matrix[i][j - 1] == null;\n        const hasOneFreeRowAfter =\n          i < matrix.length - 1 ? matrix[i + 1][j] != null : false;\n        const hasOneFreeColAfter =\n          j < matrix[i].length - 1 ? matrix[i][j + 1] != null : false;\n        const isVertical = isPreviousRowBlack && hasOneFreeRowAfter;\n        const isHorizontal = isPreviousColBlack && hasOneFreeColAfter;\n        if (isHorizontal || isVertical) {\n          definitions.push({\n            order: definitions.length + 1,\n            row: i,\n            col: j,\n            isHorizontal,\n            isVertical,\n            horizontalDefinition: \"\",\n            verticalDefinition: \"\",\n          });\n        }\n      }\n    }\n  }\n  return definitions;\n};\n\nconst initReducer = ({\n  rows,\n  cols,\n  showDefs = true,\n}: {\n  rows: number;\n  cols: number;\n  showDefs?: boolean;\n}) => {\n  const matrix = times(() => repeat(\"\", cols), rows);\n  const definitions = getDefinitions(matrix);\n  return { matrix, definitions, rows, cols, showDefs };\n};\n\nfunction Cruciverba() {\n  const [{ matrix, definitions, rows: ROWS, cols: COLS, showDefs }, dispatch] =\n    useReducer(\n      (state: ReducerState, action: ReducerAction) => {\n        switch (action.type) {\n          case \"setValue\": {\n            const newState: ReducerState[\"matrix\"] = clone(state.matrix);\n            newState[action.row][action.col] = action.value;\n            return { ...state, matrix: newState };\n          }\n          case \"toggleBlack\": {\n            const newState: ReducerState[\"matrix\"] = clone(state.matrix);\n            newState[action.row][action.col] =\n              newState[action.row][action.col] == null ? \"\" : null;\n            return {\n              ...state,\n              matrix: newState,\n              definitions: getDefinitions(newState),\n            };\n          }\n          case \"setSize\": {\n            const newState: ReducerState = initReducer({\n              rows: action.rows,\n              cols: action.cols,\n              showDefs: state.showDefs,\n            });\n            for (let i = 0; i < newState.matrix.length; i += 1) {\n              for (let j = 0; j < newState.matrix[i].length; j += 1) {\n                if (i < state.matrix.length && j < state.matrix[i].length) {\n                  newState.matrix[i][j] = state.matrix[i][j];\n                }\n              }\n            }\n            // Overwrite the definitions\n            newState.definitions = getDefinitions(newState.matrix);\n            return newState;\n          }\n          case \"setDefinition\": {\n            return {\n              ...state,\n              definitions: state.definitions.reduce<Array<Definition>>(\n                (acc, definition) => [\n                  ...acc,\n                  {\n                    ...definition,\n                    ...(definition.row === action.row &&\n                      definition.col === action.col && {\n                        horizontalDefinition: action.horizontalDefinition,\n                        verticalDefinition: action.verticalDefinition,\n                      }),\n                  },\n                ],\n                []\n              ),\n            };\n          }\n          case \"setShowDefs\": {\n            return {\n              ...state,\n              showDefs: action.showDefs,\n            };\n          }\n        }\n      },\n      {\n        rows: DEFAULT_ROWS,\n        cols: DEFAULT_COLS,\n        showDefs: DEFAULT_SHOW_DEFS,\n      },\n      initReducer\n    );\n\n  const rowsRef = useRef<HTMLInputElement | null>(null);\n  const colsRef = useRef<HTMLInputElement | null>(null);\n\n  const inputsRef = useRef<Array<Array<HTMLInputElement | null>>>(\n    times(() => repeat(null, COLS), ROWS)\n  );\n  const setRefCallbackFactory =\n    (row: number, col: number) => (ref: HTMLInputElement) => {\n      if (\n        row < inputsRef.current.length &&\n        col < inputsRef.current[row].length\n      ) {\n        inputsRef.current[row][col] = ref;\n      }\n    };\n\n  const { h: horizontalDefs, v: verticalDefs } = useMemo(\n    () =>\n      definitions.reduce<{ h: Array<Definition>; v: Array<Definition> }>(\n        (acc, definition) => ({\n          ...acc,\n          ...(definition.isHorizontal && { h: [...acc.h, definition] }),\n          ...(definition.isVertical && { v: [...acc.v, definition] }),\n        }),\n        { h: [], v: [] }\n      ),\n    [definitions]\n  );\n\n  const handleChangeFactory =\n    (row: number, col: number) => (evt: ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value.toUpperCase();\n      if (/^[A-Z]?$/.test(value)) {\n        dispatch({\n          type: \"setValue\",\n          row,\n          col,\n          value,\n        });\n      }\n    };\n\n  const handleToggleBlackFactory = (row: number, col: number) => () => {\n    dispatch({\n      type: \"toggleBlack\",\n      row,\n      col,\n    });\n  };\n\n  const handleSetSize: FormEventHandler<HTMLFormElement> = (evt) => {\n    evt.preventDefault();\n    const rows = parseInt(rowsRef.current?.value ?? \"\");\n    const cols = parseInt(colsRef.current?.value ?? \"\");\n\n    // Reset all refs\n    inputsRef.current = times(() => repeat(null, cols), rows);\n\n    dispatch({\n      type: \"setSize\",\n      rows: isNaN(rows) || rows < 2 ? DEFAULT_ROWS : rows,\n      cols: isNaN(cols) || cols < 2 ? DEFAULT_COLS : cols,\n    });\n  };\n\n  const handleDefinitionFactory =\n    (definition: Definition, direction: \"h\" | \"v\") =>\n    (evt: ChangeEvent<HTMLInputElement>) => {\n      dispatch({\n        type: \"setDefinition\",\n        row: definition.row,\n        col: definition.col,\n        horizontalDefinition:\n          direction === \"h\"\n            ? evt.target.value\n            : definition.horizontalDefinition,\n        verticalDefinition:\n          direction === \"v\" ? evt.target.value : definition.verticalDefinition,\n      });\n    };\n\n  const handleToggleDefs: ChangeEventHandler<HTMLInputElement> = (evt) => {\n    dispatch({\n      type: \"setShowDefs\",\n      showDefs: evt.target.checked,\n    });\n  };\n\n  const handleKeyDownNavigateFactory =\n    (row: number, col: number): KeyboardEventHandler<HTMLInputElement> =>\n    (evt) => {\n      if (evt.key === \"ArrowUp\" && row > 0) {\n        inputsRef.current\n          .reduceRight<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index < row && current[col] != null\n                ? current[col]\n                : acc,\n            null\n          )\n          ?.focus();\n      }\n      if (evt.key === \"ArrowDown\" && row < matrix.length - 1) {\n        inputsRef.current\n          .reduce<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index > row && current[col] != null\n                ? current[col]\n                : acc,\n            null\n          )\n          ?.focus();\n      }\n      if (evt.key === \"ArrowLeft\" && col > 0) {\n        inputsRef.current[row]\n          .reduceRight<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index < col && current != null ? current : acc,\n            null\n          )\n          ?.focus();\n      }\n      if (evt.key === \"ArrowRight\" && col < matrix[row].length - 1) {\n        inputsRef.current[row]\n          .reduce<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index > col && current != null ? current : acc,\n            null\n          )\n          ?.focus();\n      }\n      if (\n        evt.key === \"Backspace\" &&\n        (inputsRef.current[row][col]?.value as string).length === 0 &&\n        col > 0\n      ) {\n        inputsRef.current[row]\n          .reduceRight<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index < col && current != null ? current : acc,\n            null\n          )\n          ?.focus();\n      }\n    };\n\n  const handleKeyUpNavigateFactory =\n    (row: number, col: number): KeyboardEventHandler<HTMLInputElement> =>\n    (evt) => {\n      if (/^[a-zA-Z]$/.test(evt.key) && col < matrix[row].length - 1) {\n        inputsRef.current[row]\n          .reduce<HTMLInputElement | null>(\n            (acc, current, index) =>\n              acc == null && index > col && current != null ? current : acc,\n            null\n          )\n          ?.focus();\n      }\n    };\n\n  return (\n    <div className=\"app\">\n      <table className=\"app_table\">\n        <caption className=\"app_caption\">Parole Crociate</caption>\n        <tbody>\n          {times(\n            (row) => (\n              <tr key={row}>\n                {times((col) => {\n                  const definition = definitions.find(\n                    (definition) =>\n                      definition.row === row && definition.col === col\n                  );\n                  return (\n                    <td\n                      className=\"app_td\"\n                      key={`${row}-${col}`}\n                      onDoubleClick={handleToggleBlackFactory(row, col)}\n                    >\n                      {shouldBeBlack(row, col, matrix) ? (\n                        <span className=\"app_black\"></span>\n                      ) : (\n                        <>\n                          {showDefs && definition != null && (\n                            <span className=\"app_definition\">\n                              {definition.order}\n                            </span>\n                          )}\n                          <input\n                            className=\"app_input\"\n                            name={`input-${row}-${col}`}\n                            type=\"text\"\n                            value={matrix[row][col] as string}\n                            onChange={handleChangeFactory(row, col)}\n                            maxLength={1}\n                            ref={setRefCallbackFactory(row, col)}\n                            onKeyDown={handleKeyDownNavigateFactory(row, col)}\n                            onKeyUp={handleKeyUpNavigateFactory(row, col)}\n                          />\n                        </>\n                      )}\n                    </td>\n                  );\n                }, COLS)}\n              </tr>\n            ),\n            ROWS\n          )}\n        </tbody>\n      </table>\n      {showDefs && (\n        <div className=\"app_definitions\">\n          {horizontalDefs.length && (\n            <div className=\"app_directionDefinitions\">\n              <h2>Orizzontali</h2>\n              <ol>\n                {horizontalDefs.map((definition, index) => (\n                  <li\n                    value={definition.order}\n                    key={`h-${definition.order}-${index}`}\n                  >\n                    <input\n                      className=\"app_definitionInput\"\n                      name={`h-${definition.order}`}\n                      type=\"text\"\n                      value={definition.horizontalDefinition}\n                      onChange={handleDefinitionFactory(definition, \"h\")}\n                    />\n                  </li>\n                ))}\n              </ol>\n            </div>\n          )}\n          {verticalDefs.length && (\n            <div className=\"app_directionDefinitions\">\n              <h2>Verticali</h2>\n              <ol>\n                {verticalDefs.map((definition, index) => (\n                  <li\n                    value={definition.order}\n                    key={`v-${definition.order}-${index}`}\n                  >\n                    <input\n                      className=\"app_definitionInput\"\n                      name={`v-${definition.order}`}\n                      type=\"text\"\n                      value={definition.verticalDefinition}\n                      onChange={handleDefinitionFactory(definition, \"v\")}\n                    />\n                  </li>\n                ))}\n              </ol>\n            </div>\n          )}\n        </div>\n      )}\n      <form onSubmit={handleSetSize}>\n        <label htmlFor=\"rows\">Numero di righe:</label>\n        <input name=\"rows\" defaultValue={ROWS} ref={rowsRef} type=\"number\" />\n        <label htmlFor=\"cols\">Numero di colonne:</label>\n        <input name=\"cols\" defaultValue={COLS} ref={colsRef} type=\"number\" />\n        <input\n          name=\"showDefs\"\n          checked={showDefs}\n          onChange={handleToggleDefs}\n          type=\"checkbox\"\n          value=\"showDefs\"\n        />\n        <label htmlFor=\"defs\">Mostra definizioni</label>\n        <button type=\"submit\">Update</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Cruciverba;\n"],"sourceRoot":""}