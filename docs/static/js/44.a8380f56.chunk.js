/*! For license information please see 44.a8380f56.chunk.js.LICENSE.txt */
(self.webpackChunkminkiele_github_io=self.webpackChunkminkiele_github_io||[]).push([[44],{4044:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return k}});var o=n(4942),r=n(7363),i="PyQIC",a="IMwkC",s="SDEFW",u="wZvup",c=n(3433),l=n(1413),h=n(9439),f=n(3904),m=function(e){return{size:e,board:{left:(0,f.w6H)(1,e+1),center:[],right:[]},isValid:!1,moves:0}},d=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:30;return{width:"calc(".concat(n,"% + ").concat((100-n)/Math.max(1,t-1)*(e-1),"%)")}},v=function e(t,n,o){var r=[],i=function(e,t){switch(e){case"left":return"right"===t?"center":"right";case"center":return"right"===t?"left":"right";case"right":return"left"===t?"center":"left"}}(n,o);return t>1&&r.push.apply(r,(0,c.Z)(e(t-1,n,i))),r.push({from:n,to:o}),t>1&&r.push.apply(r,(0,c.Z)(e(t-1,i,o))),r},p=n(1611),g=n(6123),b=n.n(g),y=n(6417),w=["left","center","right"],k=function(){var e=function(e){var t=(0,r.useReducer)((function(e,t){switch(t.type){case"move":if(t.from!==t.to&&e.board[t.from].length>0&&(0===e.board[t.to].length||e.board[t.from][0]<e.board[t.to][0])){var n,r=(0,l.Z)((0,l.Z)({},e.board),{},(n={},(0,o.Z)(n,t.from,e.board[t.from].slice(1)),(0,o.Z)(n,t.to,[e.board[t.from][0]].concat((0,c.Z)(e.board[t.to]))),n)),i=r.center.length===e.size||r.right.length===e.size;return(0,l.Z)((0,l.Z)({},e),{},{board:r,isValid:i,moves:e.moves+1})}return e;case"setSize":return m(t.size);case"reset":return m(e.size)}}),{size:e,board:{left:(0,f.w6H)(1,e+1),center:[],right:[]},isValid:!1,moves:0}),n=(0,h.Z)(t,2),i=n[0],a=n[1],s=(0,r.useCallback)((function(e){return a({type:"setSize",size:e})}),[]),u=(0,r.useCallback)((function(e,t){return a({type:"move",from:e,to:t})}),[]),d=(0,r.useCallback)((function(){return a({type:"reset"})}),[]);return(0,r.useEffect)((function(){s(e)}),[e,s]),(0,r.useMemo)((function(){return(0,l.Z)((0,l.Z)({},i),{},{setSize:s,move:u,reset:d})}),[i,s,u,d])}(3),t=e.board,n=e.moves,g=e.isValid,k=e.size,x=e.setSize,j=e.move,S=e.reset,Z=function(e){var t=(0,r.useState)([]),n=(0,h.Z)(t,2),o=n[0],i=n[1];(0,r.useEffect)((function(){2===o.length&&(e(o[0],o[1]),i([]))}),[o,e]);var a=(0,r.useCallback)((function(e){i((function(t){return[].concat((0,c.Z)(t),[e])}))}),[]);return(0,r.useMemo)((function(){return{touchSelected:o,touchSelect:a}}),[o,a])}(j),z=Z.touchSelected,C=Z.touchSelect,M=(0,r.useRef)(),T=function(e){e.preventDefault()},D=function(){null!=M.current&&clearInterval(M.current)},E=function(){S(),D()},I=(0,f.bBJ)(C);return(0,y.jsxs)("div",{children:[(0,y.jsx)(p.Z,{children:"# Vietnam\n\nA very basic implementation of the **Tower of Hanoi**. To solve it you must\nmove the pile from the left column to one of the others, but you can\nmove a smaller stone over a bigger one (or to an empty column). To move\na pile of n stones the minimum amount of moves is 2^n - 1, so to move\na 10 stones pile you'll take at least 1023 moves to make it properly.\n\nOnce you understand how it works it becomes a very repetitive task, and\nthe challenge becomes remembering where are you during the move, often\nyou'll forget which \"sub-pile\" you're taking down and which one you're\nbuilding up.\n\nThe procedure to solve a Tower of Hanoi can be boiled down to a very\nsimple recursive algorithm, so to move a stack of size n from one column\nto another you must:\n\n1. Move a sub-stack of size n - 1 to the third column;\n2. Move the last stone to the second column;\n3. Move the sub-stack of size n - 1 from the third to the second column;\n\nApply recursively this sequence to any sub stack you're trying to move.\n\nTo play on desktop drag & drop the top stones where you need them; to\nplay on mobile tap the stack you're taking the stone from then tap the\ncolumn where you're leaving it.\n"}),(0,y.jsx)("div",{className:i,children:w.map((function(e){var n,r;return(0,y.jsx)("div",{className:b()((n={},(0,o.Z)(n,a,!0),(0,o.Z)(n,s,z.includes(e)),n)),onDragOver:T,onDrop:(r=e,function(e){e.preventDefault();var t=e.dataTransfer.getData("text/plain");j(t,r)}),onTouchEnd:I(e),children:t[e].map((function(t,n){return(0,y.jsx)("div",{className:u,style:d(t,k,30),draggable:0===n,onDragStart:(o=e,function(e){e.dataTransfer.setData("text/plain",o)})},"".concat(e,"-").concat(t));var o}))},e)}))}),(0,y.jsxs)("p",{children:["To move this tower you'll need 2",(0,y.jsx)("sup",{children:k})," - 1 = ",Math.pow(2,k)-1," ","moves, so far you made ",n," moves."]}),g&&(n===Math.pow(2,k)-1?(0,y.jsx)("p",{children:"You solved it with maximum effort!"}):(0,y.jsx)("p",{children:"You solved it, but you can do better."})),(0,y.jsx)("div",{children:(0,y.jsxs)("fieldset",{children:[(0,y.jsx)("legend",{children:"Controls"}),(0,y.jsx)("label",{htmlFor:"setSize",children:"Size of the tower:"})," ",(0,y.jsx)("input",{id:"setSize",type:"number",onChange:function(e){var t=parseInt(e.target.value);x(Math.max(1,isNaN(t)?1:t)),D()},value:k})," ",(0,y.jsx)("button",{type:"button",onClick:E,children:"Reset"})," ",(0,y.jsx)("button",{type:"button",onClick:function(){E();var e=v(k,"left","right"),t=k>1?1e3/(3*Math.log2(k)):0;M.current=setInterval((function(){if(e.length>0){var t=e.shift(),n=t.from,o=t.to;j(n,o)}else D()}),t)},children:"Solve"})]})})]})}},1611:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var o=n(7363),r=n(7973),i=n(6417),a=(0,o.memo)((function(e){var t=e.children;return(0,i.jsx)(r.D,{components:{h1:function(){return(0,o.createElement)(o.Fragment)}},children:t})}))},6123:function(e,t){var n;!function(){"use strict";var o={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)){if(n.length){var a=r.apply(null,n);a&&e.push(a)}}else if("object"===i){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)o.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()}}]);